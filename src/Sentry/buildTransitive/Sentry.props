<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <SentryAttributesFile>Sentry.Attributes$(MSBuildProjectExtension.Replace('proj', ''))</SentryAttributesFile>
  </PropertyGroup>
  <Target Name="WriteSentryAttributes"
          Condition="$(Language) == 'VB' or $(Language) == 'C#' or $(Language) == 'F#'"
          BeforeTargets="BeforeCompile;CoreCompile"
          Inputs="$(MSBuildAllProjects)"
          Outputs="$(IntermediateOutputPath)$(SentryAttributesFile)">
    <PropertyGroup>
      <SentryAttributesFilePath>$(IntermediateOutputPath)$(SentryAttributesFile)</SentryAttributesFilePath>
    </PropertyGroup>
    <ItemGroup>
      <SentryAttributes Include="System.Reflection.AssemblyMetadata">
        <_Parameter1>Sentry.ProjectDirectory</_Parameter1>
        <_Parameter2>$(ProjectDir)</_Parameter2>
      </SentryAttributes>
      <!-- Ensure not part of Compile, as a workaround for https://github.com/dotnet/sdk/issues/114 -->
      <Compile Remove="$(SentryAttributesFilePath)" />
    </ItemGroup>
    <WriteCodeFragment AssemblyAttributes="@(SentryAttributes)"
                       Language="$(Language)"
                       OutputFile="$(SentryAttributesFilePath)">
      <Output Condition="$(Language) != 'F#'"
              TaskParameter="OutputFile"
              ItemName="Compile" />
      <Output Condition="$(Language) == 'F#'"
              TaskParameter="OutputFile"
              ItemName="CompileBefore" />
      <Output TaskParameter="OutputFile"
              ItemName="FileWrites" />
    </WriteCodeFragment>
  </Target>

  <PropertyGroup>
    <!-- By default, symbols will be uploaded for Release builds only.  SentryUploadSymbols can be set to override. -->
    <SentryUploadSymbols Condition="'$(SentryUploadSymbols)' == '' And '$(Configuration)' == 'Release'">true</SentryUploadSymbols>
    <SentryUploadSymbols Condition="'$(SentryUploadSymbols)' == '' And '$(Configuration)' != 'Release'">false</SentryUploadSymbols>
  </PropertyGroup>
  <Target Name="UploadSymbolsToSentry" AfterTargets="AfterBuild" Condition="'$(SentryUploadSymbols)' == 'true' And ('$(PkgSentry)' != '' Or '$(SentryCLIDirectory)' != '')">

    <!-- Sentry CLI comes from the Sentry Nuget package when installed. -->
    <PropertyGroup Condition="'$(SentryCLIDirectory)' == ''">
      <SentryCLIDirectory Condition="'$(PkgSentry)' != ''">$(PkgSentry)\tools\</SentryCLIDirectory>
    </PropertyGroup>

    <!--
      Choose the correct Sentry CLI executable depending on OS platform and architecture.
      For Windows on Arm64, we'll use the X64 build for now (which should run via emulation).
      Switch to a Windows Arm64 build when available. See https://github.com/getsentry/sentry-cli/issues/1426
    -->
    <PropertyGroup Condition="'$(SentryCLI)' == '' And '$(SentryCLIDirectory)' != ''">
      <_OSArchitecture>$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)</_OSArchitecture>
      <SentryCLI Condition="$([MSBuild]::IsOSPlatform('OSX')) And $(_OSArchitecture) == 'Arm64'">$(SentryCLIDirectory)sentry-cli-Darwin-arm64</SentryCLI>
      <SentryCLI Condition="$([MSBuild]::IsOSPlatform('OSX')) And $(_OSArchitecture) == 'X64'">$(SentryCLIDirectory)sentry-cli-Darwin-x86_64</SentryCLI>
      <SentryCLI Condition="$([MSBuild]::IsOSPlatform('Linux')) And $(_OSArchitecture) == 'Arm64'">$(SentryCLIDirectory)sentry-cli-Linux-aarch64</SentryCLI>
      <SentryCLI Condition="$([MSBuild]::IsOSPlatform('Linux')) And $(_OSArchitecture) == 'X86'">$(SentryCLIDirectory)sentry-cli-Linux-i686</SentryCLI>
      <SentryCLI Condition="$([MSBuild]::IsOSPlatform('Linux')) And $(_OSArchitecture) == 'X64'">$(SentryCLIDirectory)sentry-cli-Linux-x86_64</SentryCLI>
      <SentryCLI Condition="$([MSBuild]::IsOSPlatform('Windows')) And $(_OSArchitecture) == 'Arm64'">$(SentryCLIDirectory)sentry-cli-Windows-x86_64</SentryCLI>
      <SentryCLI Condition="$([MSBuild]::IsOSPlatform('Windows')) And $(_OSArchitecture) == 'X86'">$(SentryCLIDirectory)sentry-cli-Windows-i686</SentryCLI>
      <SentryCLI Condition="$([MSBuild]::IsOSPlatform('Windows')) And $(_OSArchitecture) == 'X64'">$(SentryCLIDirectory)sentry-cli-Windows-x86_64</SentryCLI>
    </PropertyGroup>

    <PropertyGroup Condition="'$(SENTRY_AUTH_TOKEN)' != '' And '$(SENTRY_ORG)' != '' And '$(SENTRY_PROJECT)' != '' And '$(SentryCLI)' != '' And Exists('$(SentryCLI)')">
      <_InvokeSentryCLI>true</_InvokeSentryCLI>
    </PropertyGroup>

    <Message Condition="'$(_InvokeSentryCLI)' == 'true'" Importance="High"
      Text="Preparing to upload debug symbols to Sentry for $(MSBuildProjectName) ($(Configuration)/$(TargetFramework))" />

    <Exec Condition="'$(_InvokeSentryCLI)' == 'true'"
      Command="'$(SentryCLI)' upload-dif '$(IntermediateOutputPath)'" />

  </Target>

</Project>
