<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks Condition="'$(NO_IOS)' == '' And '$(NO_MACCATALYST)' == ''">net8.0-ios17.0;net8.0-maccatalyst17.0</TargetFrameworks>
    <TargetFrameworks Condition="'$(NO_IOS)' == '' And '$(NO_MACCATALYST)' == 'true'">net8.0-ios17.0</TargetFrameworks>
    <TargetFrameworks Condition="'$(NO_IOS)' == 'true' And '$(NO_MACCATALYST)' == ''">net8.0-maccatalyst17.0</TargetFrameworks>
    <IsBindingProject>true</IsBindingProject>
    <MtouchNoSymbolStrip>true</MtouchNoSymbolStrip>
    <Description>.NET Bindings for the Sentry Cocoa SDK</Description>
    <SentryCocoaSdkDirectory>..\..\modules\sentry-cocoa\</SentryCocoaSdkDirectory>
    <SentryCocoaFramework>$(SentryCocoaSdkDirectory)Carthage\Build-$(TargetPlatformIdentifier)\Sentry.xcframework</SentryCocoaFramework>
    <!-- SentrySpan.g.cs: error CS0108: 'ISentrySpan.Serialize()' hides inherited member 'ISentrySerializable.Serialize()'. Use the new keyword if hiding was intended -->
    <NoWarn>$(NoWarn);CS0108</NoWarn>
  </PropertyGroup>

  <!-- Build empty assemblies when not on macOS, to pass the solution build. -->
  <ItemGroup Condition="!$([MSBuild]::IsOSPlatform('OSX'))">
    <Compile Remove="*" />
    <Using Remove="*" />
  </ItemGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="Sentry" PublicKey="$(SentryPublicKey)" />
    <InternalsVisibleTo Include="Sentry.Testing" PublicKey="$(SentryPublicKey)" />
    <InternalsVisibleTo Include="Sentry.Tests" PublicKey="$(SentryPublicKey)" />
    <InternalsVisibleTo Include="Sentry.Extensions.Logging.Tests" PublicKey="$(SentryPublicKey)" />
    <InternalsVisibleTo Include="Sentry.Maui.Tests" PublicKey="$(SentryPublicKey)" />
  </ItemGroup>

  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('OSX'))">

    <!-- Set up the binding project. -->
    <ObjcBindingApiDefinition Include="ApiDefinitions.cs" />
    <ObjcBindingApiDefinition Include="PrivateApiDefinitions.cs" />
    <ObjcBindingApiDefinition Include="SwiftApiDefinitions.cs" />
    <ObjcBindingCoreSource Include="StructsAndEnums.cs" />
    <ObjcBindingCoreSource Include="SwiftStructsAndEnums.cs" />
    <NativeReference Include="$(SentryCocoaFramework)" Kind="Framework" />

    <!-- Use a separate readme file in the nuget. -->
    <None Remove="$(MSBuildThisFileDirectory)..\..\README.md" />
    <None Include="$(MSBuildThisFileDirectory)README.md" Pack="true" PackagePath="" />

    <!-- Don't add the changelog to the nuget. -->
    <PackageReference Remove="SIL.ReleaseTasks" />

    <!-- Include our transitive build targets in the nuget. -->
    <None Include="buildTransitive\Sentry.Bindings.Cocoa.targets" Pack="true" PackagePath="buildTransitive\Sentry.Bindings.Cocoa.targets" />
  </ItemGroup>

  <!-- Build the Sentry Cocoa SDK -->
  <Target Name="_BuildSentryCocoaSDK" BeforeTargets="DispatchToInnerBuilds;BeforeBuild" Condition="'$(CI)' != 'true' and $([MSBuild]::IsOSPlatform('OSX'))"
    Inputs="..\..\.git\modules\modules\sentry-cocoa\HEAD" Outputs="..\..\modules\sentry-cocoa\Carthage\.built-from-sha">
    <MSBuild Projects="$(MSBuildProjectFile)" Targets="_InnerBuildSentryCocoaSDK" Properties="TargetFramework=once" />
  </Target>
  <Target Name="_InnerBuildSentryCocoaSDK">
    <Exec Command="../../scripts/build-sentry-cocoa.sh" />
  </Target>

  <!-- Generate bindings -->
  <Target Name="_GenerateSentryCocoaBindings" AfterTargets="_BuildSentryCocoaSDK" Condition="$([MSBuild]::IsOSPlatform('OSX'))"
          Inputs="..\..\modules\sentry-cocoa\Carthage\.built-from-sha" Outputs="ApiDefinitions.cs;StructsAndEnums.cs">
    <MSBuild Projects="$(MSBuildProjectFile)" Targets="_InnerGenerateSentryCocoaBindings" Properties="TargetFramework=once" />
  </Target>
  <Target Name="_InnerGenerateSentryCocoaBindings">
    <Exec Command="pwsh ../../scripts/generate-cocoa-bindings.ps1" />
    <!-- See https://github.com/getsentry/sentry-dotnet/pull/2558 -->
    <Exec Condition="'$(GITHUB_ACTIONS)' == 'true'" Command="pwsh ../../scripts/dirty-check.ps1 -PathToCheck $(MSBuildThisFileDirectory)" />
  </Target>

  <!-- Workaround for https://github.com/xamarin/xamarin-macios/issues/15299 -->
  <Target Name="_SetGeneratedSupportDelegatesInternal" BeforeTargets="CoreCompile" Condition="$([MSBuild]::IsOSPlatform('OSX'))"
    Inputs="$(GeneratedSourcesDir)SupportDelegates.g.cs" Outputs="$(GeneratedSourcesDir)SupportDelegates.g.cs.stamp">
    <PropertyGroup>
      <GeneratedSupportDelegatesFile>$(GeneratedSourcesDir)SupportDelegates.g.cs</GeneratedSupportDelegatesFile>
    </PropertyGroup>
    <Message Text="Patching $(MSBuildThisFileDirectory)$(GeneratedSupportDelegatesFile)" Importance="High" />
    <WriteLinesToFile
      File="$(GeneratedSupportDelegatesFile)"
      Lines="$([System.IO.File]::ReadAllText($(GeneratedSupportDelegatesFile)).Replace('public delegate','internal delegate'))"
      Overwrite="true" />
    <Touch Files="$(GeneratedSupportDelegatesFile).stamp" AlwaysCreate="true" />
  </Target>

</Project>
