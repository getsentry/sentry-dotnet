<Project>

  <PropertyGroup>
    <Version>4.0.0-beta.4</Version>
    <LangVersion>12</LangVersion>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory).assets\Sentry.snk</AssemblyOriginatorKeyFile>
    <SignAssembly>true</SignAssembly>
    <Deterministic>true</Deterministic>
    <Features>strict</Features>
    <ImplicitUsings>true</ImplicitUsings>

    <!-- Allow references to unsigned assemblies (like MAUI) from signed projects -->
    <NoWarn>$(NoWarn);CS8002</NoWarn>
  </PropertyGroup>

  <PropertyGroup Condition="'$(SolutionName)' == 'Sentry.NoMobile'">
    <NO_MOBILE>true</NO_MOBILE>
  </PropertyGroup>

  <!-- NO_MOBILE can be passed in via an environment variable or a build property to disable all mobile targets -->
  <PropertyGroup Condition="'$(NO_MOBILE)' == 'true'">
    <NO_ANDROID>true</NO_ANDROID>
    <NO_IOS>true</NO_IOS>
    <NO_MACCATALYST>true</NO_MACCATALYST>
    <NO_WINDOWS>true</NO_WINDOWS>
  </PropertyGroup>

  <!--
    Configure Sentry CLI
    NOTE: Authentication is not set here.  Instead:
    - In CI, `SENTRY_AUTH_TOKEN` is set as an environment variable via a GitHub Actions secret.
    - In dev, you can either set `SENTRY_AUTH_TOKEN` manually, or you can set an auth token
      in your ~/.sentryclirc file.  See https://docs.sentry.io/product/cli/configuration/

    There is also a a `SentryAuthToken` msbuild property, but it should be used sparingly.
    If using it, be careful that the auth token does not get committed to source control.
  -->
  <PropertyGroup>
    <SentryOrg>sentry-sdks</SentryOrg>
    <SentryProject>sentry-dotnet</SentryProject>
  </PropertyGroup>

  <!-- By default we'll only upload with Sentry CLI in Release configuration. -->
  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <SentryUploadSymbols>true</SentryUploadSymbols>
    <SentryUploadSources>true</SentryUploadSources>
  </PropertyGroup>

  <!--
    Note: The following platform-specific properties need to be set in both Directory.Build.props and DirectoryBuild.targets.
    TODO: Figure out how to consolidate to a single location.
  -->
  <PropertyGroup>
    <TargetPlatformIdentifier>$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)'))</TargetPlatformIdentifier>
    <SupportedOSPlatformVersion Condition="'$(TargetPlatformIdentifier)' == 'ios'">10.0</SupportedOSPlatformVersion>
    <SupportedOSPlatformVersion Condition="'$(TargetPlatformIdentifier)' == 'maccatalyst'">13.1</SupportedOSPlatformVersion>
    <SupportedOSPlatformVersion Condition="'$(TargetPlatformIdentifier)' == 'android'">21.0</SupportedOSPlatformVersion>
    <SupportedOSPlatformVersion Condition="'$(TargetPlatformIdentifier)' == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
    <TargetPlatformMinVersion Condition="'$(TargetPlatformIdentifier)' == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
  </PropertyGroup>

  <!-- This is helpful in code to distinguish neutral targets. -->
  <PropertyGroup>
    <DefineConstants Condition="'$(TargetPlatformIdentifier)' == ''">$(DefineConstants);PLATFORM_NEUTRAL</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(GITHUB_ACTIONS)' == 'true'">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
    <DefineConstants>$(DefineConstants);CI_BUILD</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="UnoptimizedAssemblyDetector" Version="0.1.1" PrivateAssets="All" />
    <PackageReference Include="Roslynator.Analyzers" Version="4.3.0" PrivateAssets="All" />
  </ItemGroup>

  <!-- Import the root global usings, except for samples. -->
  <ItemGroup Condition="!$(MSBuildProjectName.Contains('Samples'))">
    <Compile Include="$(MSBuildThisFileDirectory)GlobalUsings.cs" />

    <!-- Add these here instead, so we can remove them for projects that don't have STJ available. -->
    <Using Include="System.Text.Json" />
    <Using Include="System.Text.Json.Serialization" />
  </ItemGroup>

  <!-- Set the version and local path for Sentry CLI (downloaded in the restore phase of Sentry.csproj) -->
  <PropertyGroup Condition="'$(SolutionName)' != 'Sentry.Unity'">
    <SentryCLIVersion>2.22.3</SentryCLIVersion>
    <SentryCLIDirectory>$(MSBuildThisFileDirectory)tools\sentry-cli\$(SentryCLIVersion)\</SentryCLIDirectory>
  </PropertyGroup>

  <!-- Public key of .assets/Sentry.snk - not a secret.  Used by other InternalsVisibleTo entries throughout the solution. -->
  <PropertyGroup>
    <SentryPublicKey>002400000480000094000000060200000024000052534131000400000100010059964a931488bcdbd14657f1ee0df32df61b57b3d14d7290c262c2cc9ddaad6ec984044f761f778e1823049d2cb996a4f58c8ea5b46c37891414cb34b4036b1c178d7b582289d2eef3c0f1e9b692c229a306831ee3d371d9e883f0eb0f74aeac6c6ab8c85fd1ec04b267e15a31532c4b4e2191f5980459db4dce0081f1050fb8</SentryPublicKey>
  </PropertyGroup>

  <!-- Allow NSubstitute dynamic proxies to access any internal API.  Its PublicKey is not a secret. -->
  <ItemGroup>
    <InternalsVisibleTo Include="DynamicProxyGenAssembly2" PublicKey="0024000004800000940000000602000000240000525341310004000001000100c547cac37abd99c8db225ef2f6c8a3602f3b3606cc9891605d02baa56104f4cfc0734aa39b93bf7852f7d9266654753cc297e7d2edfe0bac1cdcf9f717241550e0a7b191195b7667bb4f64bcb8e2121380fd1d9d46ad2d92d2d15605093924cceaf74c4861eff62abf69b9291ed0a340e113be11e6a7d3113e92484cf7045cc7" />
  </ItemGroup>

</Project>
