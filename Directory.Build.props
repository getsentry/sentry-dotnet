<Project>

  <PropertyGroup>
    <Version>3.28.1</Version>
    <LangVersion>10</LangVersion>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory).assets\Sentry.snk</AssemblyOriginatorKeyFile>
    <SignAssembly>true</SignAssembly>
    <Deterministic>true</Deterministic>
    <Features>strict</Features>
    <ImplicitUsings>true</ImplicitUsings>

    <!-- Allow references to unsigned assemblies (like MAUI) from signed projects -->
    <NoWarn>$(NoWarn);CS8002</NoWarn>

    <!-- Configure Sentry CLI -->
    <SentryOrg>sentry-sdks</SentryOrg>
    <SentryProject>sentry-dotnet</SentryProject>
    <SentryUploadSources>true</SentryUploadSources>

  </PropertyGroup>

  <!--
    Note: The following platform-specific properties need to be set in both Directory.Build.props and DirectoryBuild.targets.
    TODO: Figure out how to consolidate to a single location.
  -->
  <PropertyGroup>
    <TargetPlatformIdentifier>$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)'))</TargetPlatformIdentifier>
    <SupportedOSPlatformVersion Condition="'$(TargetPlatformIdentifier)' == 'ios'">10.0</SupportedOSPlatformVersion>
    <SupportedOSPlatformVersion Condition="'$(TargetPlatformIdentifier)' == 'maccatalyst'">13.1</SupportedOSPlatformVersion>
    <SupportedOSPlatformVersion Condition="'$(TargetPlatformIdentifier)' == 'android'">21.0</SupportedOSPlatformVersion>
    <SupportedOSPlatformVersion Condition="'$(TargetPlatformIdentifier)' == 'tizen'">6.5</SupportedOSPlatformVersion>
    <SupportedOSPlatformVersion Condition="'$(TargetPlatformIdentifier)' == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
    <TargetPlatformMinVersion Condition="'$(TargetPlatformIdentifier)' == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
  </PropertyGroup>

  <!-- This is helpful in code to distinguish neutral targets. -->
  <PropertyGroup>
    <DefineConstants Condition="'$(TargetPlatformIdentifier)' == ''">$(DefineConstants);PLATFORM_NEUTRAL</DefineConstants>
  </PropertyGroup>

  <!-- We're aware it's out of support but this is a library and it doesn't require nca3.1.  -->
  <!-- there's no reason to cause friction to a consumer that for some reason is stuck on an unsupported version. -->
  <PropertyGroup>
    <CheckEolTargetFramework>false</CheckEolTargetFramework>
  </PropertyGroup>

  <PropertyGroup Condition="'$(GITHUB_ACTIONS)' == 'true'">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
    <DefineConstants>$(DefineConstants);CI_BUILD</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="UnoptimizedAssemblyDetector" Version="0.1.*" PrivateAssets="All" />
    <PackageReference Include="Roslynator.Analyzers" Version="4.*" PrivateAssets="All" />
    <PackageReference Include="Nullable" Version="1.*" PrivateAssets="All" />
  </ItemGroup>

  <!-- Import the root global usings, except for samples. -->
  <ItemGroup Condition="!$(MSBuildProjectName.Contains('Samples'))">
    <Compile Include="$(MSBuildThisFileDirectory)GlobalUsings.cs" />

    <!-- Add these here instead, so we can remove them for projects that don't have STJ available. -->
    <Using Include="System.Text.Json" />
    <Using Include="System.Text.Json.Serialization" />
  </ItemGroup>

  <!-- Set the version and local path for Sentry CLI (downloaded in the restore phase of Sentry.csproj) -->
  <PropertyGroup Condition="'$(SolutionName)' != 'Sentry.Unity'">
    <SentryCLIVersion>2.13.0</SentryCLIVersion>
    <SentryCLIDirectory>$(MSBuildThisFileDirectory)tools\sentry-cli\$(SentryCLIVersion)\</SentryCLIDirectory>
  </PropertyGroup>

</Project>
