name: build

on:
  push:
    branches:
      - main
      - release/*
  pull_request:
jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_NOLOGO: 1
      DOTNET_MULTILEVEL_LOOKUP: 1
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
        - name: Checkout
          uses: actions/checkout@v2.3.3
          with:
            submodules: recursive
            fetch-depth: 2 # default is 1 and codecov needs > 1

        - name: Setup .NET SDK
          if: matrix.os == 'windows-latest'
          uses: actions/setup-dotnet@v1
          with:
            dotnet-version: |
              2.1.818
              3.1.x
        - name: Setup .NET SDK
          if: matrix.os == 'macos-latest'
          uses: actions/setup-dotnet@v1
          with:
            dotnet-version: |
              2.1.818
              6.0.x
        - name: Setup .NET SDK
          if: matrix.os == 'ubuntu-latest'
          uses: actions/setup-dotnet@v1
          with:
          # Installing 2.1.818 on ubuntu has the side-effect of uninstalling the previous Frameworks.
            dotnet-version: |
              2.1.818
              3.1.x
              5.0.x
              6.0.x

        - name: Build
          run: dotnet build SentryNoSamples.slnf -c Release /p:CopyLocalLockFileAssemblies=true

        - name: Test
          run: dotnet test SentryNoSamples.slnf -c Release --no-build -l "GitHubActions;report-warnings=false" -l "trx;LogFileName=${{ matrix.os }}-test-results.trx"

        - name: Create Test Report
          uses: phoenix-actions/test-reporting@4b942144e31c4039ac808d9b29945864b628a574
          # run this step even if previous step failed
          if: success() || failure()
          with:
            name: Unit Test Results (${{ matrix.os }})
            path: '**/*.trx'
            reporter: dotnet-trx
            list-suites: 'all'
            list-tests: 'failed'

        - name: Pack
          # only pack on windows since we need classic .net assemblies
          if: matrix.os == 'windows-latest'
          run: dotnet pack SentryNoSamples.slnf -c Release --no-build /p:ContinuousIntegrationBuild=true

        - name: Upload Verify Results
          if: failure()
          uses: actions/upload-artifact@v2
          with:
            name: verify-test-results
            path: |
              **/*.received.*

        - name: Archive Artifacts
          # only archive on windows since we only pack on windows. See Pack step.
          if: matrix.os == 'windows-latest'
          uses: actions/upload-artifact@v2
          with:
            name: ${{ github.sha }}
            if-no-files-found: error
            path: |
              ${{ github.workspace }}/src/**/Release/*.nupkg

