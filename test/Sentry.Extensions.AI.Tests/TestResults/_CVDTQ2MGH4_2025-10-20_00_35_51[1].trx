<?xml version="1.0" encoding="utf-8"?>
<TestRun id="399904eb-4e05-47a0-8d36-1915f59f8f12" name="@CVDTQ2MGH4 2025-10-20 00:35:51" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2025-10-20T00:35:51.1395920-04:00" queuing="2025-10-20T00:35:51.1395920-04:00" start="2025-10-20T00:35:50.5596220-04:00" finish="2025-10-20T00:35:51.2285140-04:00" />
  <TestSettings name="default" id="a5197c6b-1111-4db0-94cb-21bd9d4fad57">
    <Deployment runDeploymentRoot="_CVDTQ2MGH4_2025-10-20_00_35_51" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="abf3d383-080e-4cd9-875b-735e3c5293d3" testId="a03a5a24-7ffe-5f66-e81b-0b47bf83dbdf" testName="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests.WithSentry_IChatClient_WithNullConfiguration_UsesDefaultConfiguration" computerName="CVDTQ2MGH4" duration="00:00:00.0034236" startTime="2025-10-20T00:35:51.1352050-04:00" endTime="2025-10-20T00:35:51.1387350-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="abf3d383-080e-4cd9-875b-735e3c5293d3" />
    <UnitTestResult executionId="20e1281e-46bc-43bf-860d-a3826c142bf6" testId="edfb2d64-ad5a-7de7-e70b-cbff59f4c950" testName="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.AllPropertyCombinations_WorkCorrectly(includeRequest: True, includeResponse: False, initializeSdk: False)" computerName="CVDTQ2MGH4" duration="00:00:00.0000059" startTime="2025-10-20T00:35:51.1963990-04:00" endTime="2025-10-20T00:35:51.1964630-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="20e1281e-46bc-43bf-860d-a3826c142bf6" />
    <UnitTestResult executionId="8ccc5b1e-5677-4881-bf0c-cccc0beb6a8e" testId="a31999a4-1161-ca6d-a806-310c959e5764" testName="Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_PreservesInnerFunctionName" computerName="CVDTQ2MGH4" duration="00:00:00.0010571" startTime="2025-10-20T00:35:51.1708780-04:00" endTime="2025-10-20T00:35:51.1721090-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8ccc5b1e-5677-4881-bf0c-cccc0beb6a8e">
      <Output>
        <ErrorInfo>
          <Message>NSubstitute.Exceptions.AmbiguousArgumentsException : Cannot determine argument specifications to use. Please use specifications for all arguments of the same type.
Method signature:
    InvokeCoreAsync(AIFunctionArguments, CancellationToken)
Method arguments (possible arg matchers are indicated with '*'):
    InvokeCoreAsync(AIFunctionArguments, *System.Threading.CancellationToken*)
All queued specifications:
    any AIFunctionArguments
    any CancellationToken
Matched argument specifications:
    InvokeCoreAsync(AIFunctionArguments, ???)
</Message>
          <StackTrace>   at NSubstitute.Core.Arguments.ArgumentSpecificationsFactory.Create(IList`1 argumentSpecs, Object[] arguments, IParameterInfo[] parameterInfos, MethodInfo methodInfo, MatchArgs matchArgs)
   at NSubstitute.Core.CallSpecificationFactory.CreateFrom(ICall call, MatchArgs matchArgs)
   at NSubstitute.Routing.Handlers.RecordCallSpecificationHandler.Handle(ICall call)
   at NSubstitute.Routing.Route.Handle(ICall call)
   at NSubstitute.Core.CallRouter.Route(ICall call)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at Castle.Proxies.AIFunctionProxy.InvokeCoreAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
   at Microsoft.Extensions.AI.AIFunction.InvokeAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
   at Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_PreservesInnerFunctionName() in /Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/SentryInstrumentedFunctionTests.cs:line 135
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0c8c5376-41d2-4d5b-8cc2-a8da80ad17ee" testId="ecd7e7dd-9e98-8a95-f239-7db00bb2588d" testName="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.AllPropertyCombinations_WorkCorrectly(includeRequest: True, includeResponse: False, initializeSdk: True)" computerName="CVDTQ2MGH4" duration="00:00:00.0000051" startTime="2025-10-20T00:35:51.1970860-04:00" endTime="2025-10-20T00:35:51.1971480-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0c8c5376-41d2-4d5b-8cc2-a8da80ad17ee" />
    <UnitTestResult executionId="63c54753-a740-408e-b8a0-e6ae84aeee51" testId="b41f6021-383a-d928-8ca4-0fd332e9d7c2" testName="Sentry.Extensions.AI.Tests.SentryChatClientTests.CompleteAsync_CallsInnerClient" computerName="CVDTQ2MGH4" duration="00:00:00.0051678" startTime="2025-10-20T00:35:51.1885680-04:00" endTime="2025-10-20T00:35:51.1938370-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="63c54753-a740-408e-b8a0-e6ae84aeee51" />
    <UnitTestResult executionId="e30215aa-772a-40e3-ae93-642ca1e833d3" testId="a1411ee4-03cc-3160-23ec-62d379e3663f" testName="Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WithoutParentSpan_CreatesTransaction" computerName="CVDTQ2MGH4" duration="00:00:00.0006412" startTime="2025-10-20T00:35:51.1742030-04:00" endTime="2025-10-20T00:35:51.1750050-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e30215aa-772a-40e3-ae93-642ca1e833d3">
      <Output>
        <ErrorInfo>
          <Message>NSubstitute.Exceptions.AmbiguousArgumentsException : Cannot determine argument specifications to use. Please use specifications for all arguments of the same type.
Method signature:
    InvokeCoreAsync(AIFunctionArguments, CancellationToken)
Method arguments (possible arg matchers are indicated with '*'):
    InvokeCoreAsync(AIFunctionArguments, *System.Threading.CancellationToken*)
All queued specifications:
    any AIFunctionArguments
    any CancellationToken
Matched argument specifications:
    InvokeCoreAsync(AIFunctionArguments, ???)
</Message>
          <StackTrace>   at NSubstitute.Core.Arguments.ArgumentSpecificationsFactory.Create(IList`1 argumentSpecs, Object[] arguments, IParameterInfo[] parameterInfos, MethodInfo methodInfo, MatchArgs matchArgs)
   at NSubstitute.Core.CallSpecificationFactory.CreateFrom(ICall call, MatchArgs matchArgs)
   at NSubstitute.Routing.Handlers.RecordCallSpecificationHandler.Handle(ICall call)
   at NSubstitute.Routing.Route.Handle(ICall call)
   at NSubstitute.Core.CallRouter.Route(ICall call)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at Castle.Proxies.AIFunctionProxy.InvokeCoreAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
   at Microsoft.Extensions.AI.AIFunction.InvokeAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
   at Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WithoutParentSpan_CreatesTransaction() in /Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/SentryInstrumentedFunctionTests.cs:line 45
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="49868197-7f83-4ea7-9530-7a04d873fc0a" testId="583ec369-322a-54f1-e99c-650ad5156272" testName="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithRequest_SetsTopP_WhenProvided" computerName="CVDTQ2MGH4" duration="00:00:00.0742442" startTime="2025-10-20T00:35:50.9880760-04:00" endTime="2025-10-20T00:35:51.0682920-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="49868197-7f83-4ea7-9530-7a04d873fc0a" />
    <UnitTestResult executionId="3881419c-ce86-4660-ad5a-b9f45307bd73" testId="5553cf67-c3a9-2355-8661-bd7b922a8095" testName="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithRequest_SetsMessages_WhenIncludeRequestMessagesIsTrue" computerName="CVDTQ2MGH4" duration="00:00:00.0001095" startTime="2025-10-20T00:35:51.1325450-04:00" endTime="2025-10-20T00:35:51.1327140-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3881419c-ce86-4660-ad5a-b9f45307bd73" />
    <UnitTestResult executionId="e795496a-60e0-45c0-8023-8af4b89cbc54" testId="9429f264-54d3-17d7-1715-b8108ebaa7b4" testName="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.AllPropertyCombinations_WorkCorrectly(includeRequest: False, includeResponse: False, initializeSdk: False)" computerName="CVDTQ2MGH4" duration="00:00:00.0000045" startTime="2025-10-20T00:35:51.1973070-04:00" endTime="2025-10-20T00:35:51.1973660-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e795496a-60e0-45c0-8023-8af4b89cbc54" />
    <UnitTestResult executionId="0289ac5c-6e3c-47ee-8576-19e71d94f7e6" testId="9f10085a-199c-a283-23c9-bf3cb4682c44" testName="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithRequest_SetsBasicOperationName" computerName="CVDTQ2MGH4" duration="00:00:00.0001021" startTime="2025-10-20T00:35:51.1116390-04:00" endTime="2025-10-20T00:35:51.1118080-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0289ac5c-6e3c-47ee-8576-19e71d94f7e6" />
    <UnitTestResult executionId="1caf844b-08b2-44a1-9f46-c71d8176a15a" testId="35fba436-2403-7029-b0bc-5e38c6e4b75a" testName="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithRequest_DoesNotSetMessages_WhenMessagesArrayIsEmpty" computerName="CVDTQ2MGH4" duration="00:00:00.0002115" startTime="2025-10-20T00:35:51.0945750-04:00" endTime="2025-10-20T00:35:51.0948640-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1caf844b-08b2-44a1-9f46-c71d8176a15a" />
    <UnitTestResult executionId="e32a7c0d-443a-4eaa-87b4-523f99086a81" testId="84d6b514-0700-14d2-e5a2-7b328a7e27fa" testName="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithRequest_SetsFrequencyPenalty_WhenProvided" computerName="CVDTQ2MGH4" duration="00:00:00.0002885" startTime="2025-10-20T00:35:51.1292250-04:00" endTime="2025-10-20T00:35:51.1295900-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e32a7c0d-443a-4eaa-87b4-523f99086a81" />
    <UnitTestResult executionId="933ee7d4-21e8-4a92-aed8-0a592d4e4996" testId="ef1b8795-2d5a-a1b0-12fe-8eeebbd0707b" testName="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithRequest_DoesNotSetMessages_WhenIncludeRequestMessagesIsFalse" computerName="CVDTQ2MGH4" duration="00:00:00.0001232" startTime="2025-10-20T00:35:51.1312190-04:00" endTime="2025-10-20T00:35:51.1314020-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="933ee7d4-21e8-4a92-aed8-0a592d4e4996" />
    <UnitTestResult executionId="3f26385e-deb6-4189-a98c-657d6a1c6413" testId="cc932cdd-3f79-8605-a6d7-40611a0ef5d1" testName="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithRequest_SetsModelId_WhenProvided" computerName="CVDTQ2MGH4" duration="00:00:00.0001118" startTime="2025-10-20T00:35:51.0933550-04:00" endTime="2025-10-20T00:35:51.0935370-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3f26385e-deb6-4189-a98c-657d6a1c6413" />
    <UnitTestResult executionId="70a907c7-73b7-479b-9384-8e5d4ab1427c" testId="792e8a59-9b1e-02d1-3547-d4154d2b968a" testName="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithRequest_SetsTools_WhenToolsProvided" computerName="CVDTQ2MGH4" duration="00:00:00.0170477" startTime="2025-10-20T00:35:51.1118870-04:00" endTime="2025-10-20T00:35:51.1290850-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="70a907c7-73b7-479b-9384-8e5d4ab1427c" />
    <UnitTestResult executionId="6b393f49-e466-4fe3-8cbf-a17e204ec09b" testId="ed177158-3c09-062f-0c4d-a136a6f1215b" testName="Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WithNullResult_DoesNotSetOutput" computerName="CVDTQ2MGH4" duration="00:00:00.0006031" startTime="2025-10-20T00:35:51.1766390-04:00" endTime="2025-10-20T00:35:51.1773980-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6b393f49-e466-4fe3-8cbf-a17e204ec09b">
      <Output>
        <ErrorInfo>
          <Message>NSubstitute.Exceptions.AmbiguousArgumentsException : Cannot determine argument specifications to use. Please use specifications for all arguments of the same type.
Method signature:
    InvokeCoreAsync(AIFunctionArguments, CancellationToken)
Method arguments (possible arg matchers are indicated with '*'):
    InvokeCoreAsync(AIFunctionArguments, *System.Threading.CancellationToken*)
All queued specifications:
    any AIFunctionArguments
    any CancellationToken
Matched argument specifications:
    InvokeCoreAsync(AIFunctionArguments, ???)
</Message>
          <StackTrace>   at NSubstitute.Core.Arguments.ArgumentSpecificationsFactory.Create(IList`1 argumentSpecs, Object[] arguments, IParameterInfo[] parameterInfos, MethodInfo methodInfo, MatchArgs matchArgs)
   at NSubstitute.Core.CallSpecificationFactory.CreateFrom(ICall call, MatchArgs matchArgs)
   at NSubstitute.Routing.Handlers.RecordCallSpecificationHandler.Handle(ICall call)
   at NSubstitute.Routing.Route.Handle(ICall call)
   at NSubstitute.Core.CallRouter.Route(ICall call)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at Castle.Proxies.AIFunctionProxy.InvokeCoreAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
   at Microsoft.Extensions.AI.AIFunction.InvokeAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
   at Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WithNullResult_DoesNotSetOutput() in /Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/SentryInstrumentedFunctionTests.cs:line 90
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="69142e53-c0dd-43af-90fc-eb99182b2aad" testId="ed5d9d9d-7702-7201-3bd0-673ad663cdae" testName="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.AllPropertyCombinations_WorkCorrectly(includeRequest: True, includeResponse: True, initializeSdk: True)" computerName="CVDTQ2MGH4" duration="00:00:00.0001006" startTime="2025-10-20T00:35:51.1961740-04:00" endTime="2025-10-20T00:35:51.1963410-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="69142e53-c0dd-43af-90fc-eb99182b2aad" />
    <UnitTestResult executionId="abe60f8f-4171-4694-b14f-540ab5a2659d" testId="51cdcccd-3448-cee0-c36a-f3b47f12c505" testName="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithRequest_SetsUnknownModel_WhenModelIdNotProvided" computerName="CVDTQ2MGH4" duration="00:00:00.0001076" startTime="2025-10-20T00:35:51.0949490-04:00" endTime="2025-10-20T00:35:51.0985540-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="abe60f8f-4171-4694-b14f-540ab5a2659d" />
    <UnitTestResult executionId="7e5c1b0b-3188-46ee-93ba-4f167d9cfe57" testId="efe2ebc2-e6ab-4c94-197d-c09419222a7d" testName="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithRequest_SetsMessages_WhenAIOptionsIsNull" computerName="CVDTQ2MGH4" duration="00:00:00.0001148" startTime="2025-10-20T00:35:51.1296720-04:00" endTime="2025-10-20T00:35:51.1298520-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7e5c1b0b-3188-46ee-93ba-4f167d9cfe57" />
    <UnitTestResult executionId="b3668c60-1913-4fb3-93ef-fec9ccc9e8ee" testId="3a84f686-1d60-f3e7-2242-3d8af5db297b" testName="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.Constructor_SetsDefaultValues" computerName="CVDTQ2MGH4" duration="00:00:00.0000462" startTime="2025-10-20T00:35:51.2017110-04:00" endTime="2025-10-20T00:35:51.2018220-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b3668c60-1913-4fb3-93ef-fec9ccc9e8ee" />
    <UnitTestResult executionId="455e4dfe-016c-4942-a1d3-fa67e5920cd0" testId="a1c2944e-8323-7022-5f2b-9870cd310e41" testName="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests.WithSentry_ChatOptions_DoesNotDoubleWrapSentryInstrumentedFunction" computerName="CVDTQ2MGH4" duration="00:00:00.0000975" startTime="2025-10-20T00:35:51.1491270-04:00" endTime="2025-10-20T00:35:51.1492840-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="455e4dfe-016c-4942-a1d3-fa67e5920cd0" />
    <UnitTestResult executionId="2053f658-a3c7-46da-9977-6391f223260a" testId="eab920ec-3077-1f6d-10fc-458a11c1c4bd" testName="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithResponse_DoesNotSetUsage_WhenUsageIsNull" computerName="CVDTQ2MGH4" duration="00:00:00.0019878" startTime="2025-10-20T00:35:51.0730070-04:00" endTime="2025-10-20T00:35:51.0751480-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2053f658-a3c7-46da-9977-6391f223260a" />
    <UnitTestResult executionId="91cb6db3-140a-4847-bcb2-408ed7042cb7" testId="627f7ca1-3ef4-a67f-49b0-30264416446f" testName="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.InitializeSdk_CanBeSet" computerName="CVDTQ2MGH4" duration="00:00:00.0000330" startTime="2025-10-20T00:35:51.1977900-04:00" endTime="2025-10-20T00:35:51.1978820-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="91cb6db3-140a-4847-bcb2-408ed7042cb7" />
    <UnitTestResult executionId="3a4c8aca-f50b-4212-984c-3adb0faedb14" testId="fa8763f3-ed37-46b6-e14d-45b00912eee7" testName="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests.WithSentry_IChatClient_WithConfiguration_PassesConfigurationToWrapper" computerName="CVDTQ2MGH4" duration="00:00:00.0001786" startTime="2025-10-20T00:35:51.1475920-04:00" endTime="2025-10-20T00:35:51.1478370-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3a4c8aca-f50b-4212-984c-3adb0faedb14" />
    <UnitTestResult executionId="603c4c70-8386-4af5-8ad4-351176e9a785" testId="ae327b53-2b22-2b29-b106-eec49bc98ec2" testName="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithRequest_SetsPresencePenalty_WhenProvided" computerName="CVDTQ2MGH4" duration="00:00:00.0001227" startTime="2025-10-20T00:35:51.1327800-04:00" endTime="2025-10-20T00:35:51.1329600-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="603c4c70-8386-4af5-8ad4-351176e9a785" />
    <UnitTestResult executionId="77cafe88-fc2e-4a11-ab77-a358ba337086" testId="10bcaeb6-c20b-6a8a-4027-748a1cfe151e" testName="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithStreamingResponse_AccumulatesTokenUsage" computerName="CVDTQ2MGH4" duration="00:00:00.0003041" startTime="2025-10-20T00:35:51.1330250-04:00" endTime="2025-10-20T00:35:51.1333890-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="77cafe88-fc2e-4a11-ab77-a358ba337086" />
    <UnitTestResult executionId="fb10b0e8-a183-41c4-87ef-4cb311c7d8c8" testId="a668f0c0-d834-673f-0855-a43a49192458" testName="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithResponse_SetsModelId_WhenProvided" computerName="CVDTQ2MGH4" duration="00:00:00.0001482" startTime="2025-10-20T00:35:51.1112500-04:00" endTime="2025-10-20T00:35:51.1114900-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fb10b0e8-a183-41c4-87ef-4cb311c7d8c8" />
    <UnitTestResult executionId="629782e3-23b7-47ce-8da2-c5be7355ccf8" testId="1c773253-8091-efb0-f12a-72613ed49ff2" testName="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests.WithSentry_ChatOptions_WithEmptyTools_ReturnsOriginalOptions" computerName="CVDTQ2MGH4" duration="00:00:00.0002080" startTime="2025-10-20T00:35:51.1388640-04:00" endTime="2025-10-20T00:35:51.1391510-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="629782e3-23b7-47ce-8da2-c5be7355ccf8" />
    <UnitTestResult executionId="83c69b2f-9e4f-4b9b-8044-f925ef1ca9ab" testId="acd71ff6-cf60-d3df-9838-85cc88c6d9a1" testName="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithRequest_SetsTemperature_WhenProvided" computerName="CVDTQ2MGH4" duration="00:00:00.0001329" startTime="2025-10-20T00:35:51.1309570-04:00" endTime="2025-10-20T00:35:51.1311500-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="83c69b2f-9e4f-4b9b-8044-f925ef1ca9ab" />
    <UnitTestResult executionId="dacb12be-c086-4822-a50f-80b33509e59c" testId="b7c7890c-80e8-1bd0-114d-1cb7ffdd8b97" testName="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithStreamingResponse_DoesNotSetResponseText_WhenIncludeResponseContentIsFalse" computerName="CVDTQ2MGH4" duration="00:00:00.0006102" startTime="2025-10-20T00:35:51.1299280-04:00" endTime="2025-10-20T00:35:51.1306050-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="dacb12be-c086-4822-a50f-80b33509e59c" />
    <UnitTestResult executionId="bc47cd12-ccce-44ec-ad99-56aef8622168" testId="ed283f2b-aa73-b878-e612-9aaba5ad0b51" testName="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.CanSetSentryOptionsProperties" computerName="CVDTQ2MGH4" duration="00:00:00.0001267" startTime="2025-10-20T00:35:51.1975300-04:00" endTime="2025-10-20T00:35:51.1977210-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bc47cd12-ccce-44ec-ad99-56aef8622168" />
    <UnitTestResult executionId="347ffe47-9359-45e8-ab7b-42f714ae304d" testId="b4f94cc6-9755-d4f6-5420-5847c696e96d" testName="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.AllPropertyCombinations_WorkCorrectly(includeRequest: False, includeResponse: True, initializeSdk: True)" computerName="CVDTQ2MGH4" duration="00:00:00.0012433" startTime="2025-10-20T00:35:51.1947750-04:00" endTime="2025-10-20T00:35:51.1961050-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="347ffe47-9359-45e8-ab7b-42f714ae304d" />
    <UnitTestResult executionId="49fa6162-bc1f-4443-a52a-da25b89f7101" testId="828b770f-853b-159e-4524-618d81bb2a82" testName="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithStreamingResponse_SetsModelId_FromLastMessageWithModelId" computerName="CVDTQ2MGH4" duration="00:00:00.0001401" startTime="2025-10-20T00:35:51.1306820-04:00" endTime="2025-10-20T00:35:51.1308850-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="49fa6162-bc1f-4443-a52a-da25b89f7101" />
    <UnitTestResult executionId="f293ada1-b09b-4e99-83bf-7d2e51e84e3b" testId="37aff03a-988a-2006-0d24-3ec4a9ddc16a" testName="Sentry.Extensions.AI.Tests.SentryChatClientTests.CompleteStreamingAsync_CallsInnerClient" computerName="CVDTQ2MGH4" duration="00:00:00.0061249" startTime="2025-10-20T00:35:51.1791160-04:00" endTime="2025-10-20T00:35:51.1876530-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f293ada1-b09b-4e99-83bf-7d2e51e84e3b" />
    <UnitTestResult executionId="2c98694f-b9f1-44b6-8899-fd6d39b4a6c5" testId="68a8b658-405d-1d36-ca0d-84e1e49cba1c" testName="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.AllPropertyCombinations_WorkCorrectly(includeRequest: False, includeResponse: True, initializeSdk: False)" computerName="CVDTQ2MGH4" duration="00:00:00.0000079" startTime="2025-10-20T00:35:51.1969620-04:00" endTime="2025-10-20T00:35:51.1970330-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2c98694f-b9f1-44b6-8899-fd6d39b4a6c5" />
    <UnitTestResult executionId="de62d2dd-bfe0-496d-a4fe-95889d7e1566" testId="ba199bb8-d424-d524-1d8d-da149d15eef3" testName="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests.WithSentry_ChatOptions_WrapsAIFunctionsWithSentryInstrumentedFunction" computerName="CVDTQ2MGH4" duration="00:00:00.0010682" startTime="2025-10-20T00:35:51.1479110-04:00" endTime="2025-10-20T00:35:51.1490470-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="de62d2dd-bfe0-496d-a4fe-95889d7e1566" />
    <UnitTestResult executionId="8998050b-c4ba-4670-8581-04813091924c" testId="7784a66f-9cf7-4945-cbc4-881faee565ce" testName="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithResponse_DoesNotSetResponseText_WhenIncludeResponseContentIsFalse" computerName="CVDTQ2MGH4" duration="00:00:00.0000935" startTime="2025-10-20T00:35:51.1320990-04:00" endTime="2025-10-20T00:35:51.1322590-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8998050b-c4ba-4670-8581-04813091924c" />
    <UnitTestResult executionId="640c3782-e0c4-423b-8a28-05a42f059f5b" testId="392c3d85-43fa-afaf-2331-d63e7f21e843" testName="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithResponse_SetsResponseText_WhenIncludeResponseContentIsTrue" computerName="CVDTQ2MGH4" duration="00:00:00.0085541" startTime="2025-10-20T00:35:51.0841790-04:00" endTime="2025-10-20T00:35:51.0928450-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="640c3782-e0c4-423b-8a28-05a42f059f5b" />
    <UnitTestResult executionId="4f60f82e-1cdb-4abd-8d9f-306d69469f44" testId="e783a54c-e6bd-8860-1781-60f1b554ce97" testName="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.InheritsFromSentryOptions" computerName="CVDTQ2MGH4" duration="00:00:00.0000887" startTime="2025-10-20T00:35:51.1981390-04:00" endTime="2025-10-20T00:35:51.1982860-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4f60f82e-1cdb-4abd-8d9f-306d69469f44" />
    <UnitTestResult executionId="857d3b24-b1d4-4a39-ae16-6ece569cb4c3" testId="0e7ba0d7-8640-06f9-182a-9d339e1d0c02" testName="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.AllPropertyCombinations_WorkCorrectly(includeRequest: False, includeResponse: False, initializeSdk: True)" computerName="CVDTQ2MGH4" duration="00:00:00.0000045" startTime="2025-10-20T00:35:51.1971980-04:00" endTime="2025-10-20T00:35:51.1972590-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="857d3b24-b1d4-4a39-ae16-6ece569cb4c3" />
    <UnitTestResult executionId="00797fc9-6c8c-4801-a339-ad3c4aad2208" testId="af851512-e09b-05cb-e521-fdd87e38b42b" testName="Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WhenInnerFunctionThrows_FinishesSpanWithException" computerName="CVDTQ2MGH4" duration="00:00:00.0179160" startTime="2025-10-20T00:35:51.1498000-04:00" endTime="2025-10-20T00:35:51.1702820-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="00797fc9-6c8c-4801-a339-ad3c4aad2208">
      <Output>
        <ErrorInfo>
          <Message>NSubstitute.Exceptions.AmbiguousArgumentsException : Cannot determine argument specifications to use. Please use specifications for all arguments of the same type.
Method signature:
    InvokeCoreAsync(AIFunctionArguments, CancellationToken)
Method arguments (possible arg matchers are indicated with '*'):
    InvokeCoreAsync(AIFunctionArguments, *System.Threading.CancellationToken*)
All queued specifications:
    any AIFunctionArguments
    any CancellationToken
Matched argument specifications:
    InvokeCoreAsync(AIFunctionArguments, ???)
</Message>
          <StackTrace>   at NSubstitute.Core.Arguments.ArgumentSpecificationsFactory.Create(IList`1 argumentSpecs, Object[] arguments, IParameterInfo[] parameterInfos, MethodInfo methodInfo, MatchArgs matchArgs)
   at NSubstitute.Core.CallSpecificationFactory.CreateFrom(ICall call, MatchArgs matchArgs)
   at NSubstitute.Routing.Handlers.RecordCallSpecificationHandler.Handle(ICall call)
   at NSubstitute.Routing.Route.Handle(ICall call)
   at NSubstitute.Core.CallRouter.Route(ICall call)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at Castle.Proxies.AIFunctionProxy.InvokeCoreAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
   at Microsoft.Extensions.AI.AIFunction.InvokeAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
   at Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WhenInnerFunctionThrows_FinishesSpanWithException() in /Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/SentryInstrumentedFunctionTests.cs:line 68
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="70a06ba3-58b0-450c-a6d5-3c18741db414" testId="ec1fa19b-b6c9-d93f-8ff5-b1a2af964267" testName="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.IncludeResponseContent_CanBeSet" computerName="CVDTQ2MGH4" duration="00:00:00.0000317" startTime="2025-10-20T00:35:51.2018930-04:00" endTime="2025-10-20T00:35:51.2019810-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="70a06ba3-58b0-450c-a6d5-3c18741db414" />
    <UnitTestResult executionId="0d723b09-ebd8-4d59-956c-a473a93084e3" testId="3aee159b-a8f5-7545-489f-7b5997acc138" testName="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.IncludeRequestMessages_CanBeSet" computerName="CVDTQ2MGH4" duration="00:00:00.0000798" startTime="2025-10-20T00:35:51.1979430-04:00" endTime="2025-10-20T00:35:51.1980790-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0d723b09-ebd8-4d59-956c-a473a93084e3" />
    <UnitTestResult executionId="44b5a1ca-b0d0-461e-a460-d1f7f7c8e428" testId="4bcb2db7-80da-e3e2-fba4-ade908cbac25" testName="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests.WithSentry_ChatOptions_IgnoresNonAIFunctionTools" computerName="CVDTQ2MGH4" duration="00:00:00.0073548" startTime="2025-10-20T00:35:51.1400450-04:00" endTime="2025-10-20T00:35:51.1474860-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="44b5a1ca-b0d0-461e-a460-d1f7f7c8e428" />
    <UnitTestResult executionId="59174dd2-0cff-4692-a9fb-edd9cc6b12aa" testId="4da8a0a3-9cbb-004a-70e3-bcf16601a020" testName="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests.WithSentry_ChatOptions_WithNullTools_ReturnsOriginalOptions" computerName="CVDTQ2MGH4" duration="00:00:00.0000285" startTime="2025-10-20T00:35:51.1392320-04:00" endTime="2025-10-20T00:35:51.1393220-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="59174dd2-0cff-4692-a9fb-edd9cc6b12aa" />
    <UnitTestResult executionId="101b3e55-2ccc-48b3-8d36-b24b6445cef5" testId="b3a9e239-1ca8-3b0e-a087-4455bfe3865c" testName="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests.WithSentry_ChatOptions_HandlesMultipleFunctions" computerName="CVDTQ2MGH4" duration="00:00:00.0002092" startTime="2025-10-20T00:35:51.1493500-04:00" endTime="2025-10-20T00:35:51.1496170-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="101b3e55-2ccc-48b3-8d36-b24b6445cef5" />
    <UnitTestResult executionId="7cabc4ca-9da3-489b-903a-42d16d82fa2f" testId="1ca7e173-e19d-8580-5685-2dca9586fb0e" testName="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithResponse_SetsUsageTokens_WhenUsageProvided" computerName="CVDTQ2MGH4" duration="00:00:00.0024822" startTime="2025-10-20T00:35:51.0754080-04:00" endTime="2025-10-20T00:35:51.0811490-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7cabc4ca-9da3-489b-903a-42d16d82fa2f">
      <Output>
        <ErrorInfo>
          <Message>NSubstitute.Exceptions.ReceivedCallsException : Expected to receive exactly 1 call matching:
	SetData("gen_ai.usage.input_tokens", 10)
Actually received no matching calls.
Received 4 non-matching calls (non-matching arguments indicated with '*' characters):
	SetData("gen_ai.usage.input_tokens", *10*)
	SetData(*"gen_ai.usage.output_tokens"*, *20*)
	SetData(*"gen_ai.usage.total_tokens"*, *30*)
	SetData(*"gen_ai.response.text"*, *"Hello"*)
</Message>
          <StackTrace>   at NSubstitute.Core.ReceivedCallsExceptionThrower.Throw(ICallSpecification callSpecification, IEnumerable`1 matchingCalls, IEnumerable`1 nonMatchingCalls, Quantity requiredQuantity)
   at NSubstitute.Routing.Handlers.CheckReceivedCallsHandler.Handle(ICall call)
   at NSubstitute.Routing.Route.Handle(ICall call)
   at NSubstitute.Core.CallRouter.Route(ICall call)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at Castle.Proxies.ObjectProxy.SetData(String key, Object value)
   at Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithResponse_SetsUsageTokens_WhenUsageProvided() in /Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/SentryAISpanEnricherTests.cs:line 175
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8e43a04d-7ae9-448d-8fbe-104214ed6d1d" testId="9bede207-1173-52b6-152f-687fe5328066" testName="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithRequest_SetsMaxOutputTokens_WhenProvided" computerName="CVDTQ2MGH4" duration="00:00:00.0002107" startTime="2025-10-20T00:35:51.0929680-04:00" endTime="2025-10-20T00:35:51.0932590-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8e43a04d-7ae9-448d-8fbe-104214ed6d1d" />
    <UnitTestResult executionId="d4a4ff73-fde0-4d0c-940b-42ce3d6c4af7" testId="151f3e25-cc68-2d30-b0b2-e2ef6acde1bb" testName="Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WithParentSpan_CreatesChildSpan" computerName="CVDTQ2MGH4" duration="00:00:00.0006929" startTime="2025-10-20T00:35:51.1725340-04:00" endTime="2025-10-20T00:35:51.1733830-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d4a4ff73-fde0-4d0c-940b-42ce3d6c4af7">
      <Output>
        <ErrorInfo>
          <Message>NSubstitute.Exceptions.AmbiguousArgumentsException : Cannot determine argument specifications to use. Please use specifications for all arguments of the same type.
Method signature:
    InvokeCoreAsync(AIFunctionArguments, CancellationToken)
Method arguments (possible arg matchers are indicated with '*'):
    InvokeCoreAsync(AIFunctionArguments, *System.Threading.CancellationToken*)
All queued specifications:
    any AIFunctionArguments
    any CancellationToken
Matched argument specifications:
    InvokeCoreAsync(AIFunctionArguments, ???)
</Message>
          <StackTrace>   at NSubstitute.Core.Arguments.ArgumentSpecificationsFactory.Create(IList`1 argumentSpecs, Object[] arguments, IParameterInfo[] parameterInfos, MethodInfo methodInfo, MatchArgs matchArgs)
   at NSubstitute.Core.CallSpecificationFactory.CreateFrom(ICall call, MatchArgs matchArgs)
   at NSubstitute.Routing.Handlers.RecordCallSpecificationHandler.Handle(ICall call)
   at NSubstitute.Routing.Route.Handle(ICall call)
   at NSubstitute.Core.CallRouter.Route(ICall call)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at Castle.Proxies.AIFunctionProxy.InvokeCoreAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
   at Microsoft.Extensions.AI.AIFunction.InvokeAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
   at Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WithParentSpan_CreatesChildSpan() in /Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/SentryInstrumentedFunctionTests.cs:line 19
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0e9f38c6-f6a1-43af-9bfe-07a2043aabf3" testId="dfbefe52-2c1c-cd7b-53c3-9129446f634c" testName="Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WithComplexResult_SetsOutputAsString" computerName="CVDTQ2MGH4" duration="00:00:00.0006643" startTime="2025-10-20T00:35:51.1754270-04:00" endTime="2025-10-20T00:35:51.1762500-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0e9f38c6-f6a1-43af-9bfe-07a2043aabf3">
      <Output>
        <ErrorInfo>
          <Message>NSubstitute.Exceptions.AmbiguousArgumentsException : Cannot determine argument specifications to use. Please use specifications for all arguments of the same type.
Method signature:
    InvokeCoreAsync(AIFunctionArguments, CancellationToken)
Method arguments (possible arg matchers are indicated with '*'):
    InvokeCoreAsync(AIFunctionArguments, *System.Threading.CancellationToken*)
All queued specifications:
    any AIFunctionArguments
    any CancellationToken
Matched argument specifications:
    InvokeCoreAsync(AIFunctionArguments, ???)
</Message>
          <StackTrace>   at NSubstitute.Core.Arguments.ArgumentSpecificationsFactory.Create(IList`1 argumentSpecs, Object[] arguments, IParameterInfo[] parameterInfos, MethodInfo methodInfo, MatchArgs matchArgs)
   at NSubstitute.Core.CallSpecificationFactory.CreateFrom(ICall call, MatchArgs matchArgs)
   at NSubstitute.Routing.Handlers.RecordCallSpecificationHandler.Handle(ICall call)
   at NSubstitute.Routing.Route.Handle(ICall call)
   at NSubstitute.Core.CallRouter.Route(ICall call)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at Castle.Proxies.AIFunctionProxy.InvokeCoreAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
   at Microsoft.Extensions.AI.AIFunction.InvokeAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
   at Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WithComplexResult_SetsOutputAsString() in /Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/SentryInstrumentedFunctionTests.cs:line 113
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5ad8e0c5-1bfb-4dfa-bc23-6e90c4626b33" testId="dc43dbac-c392-5964-cd42-09fb42fb03c1" testName="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithStreamingResponse_ConcatenatesResponseText" computerName="CVDTQ2MGH4" duration="00:00:00.0001047" startTime="2025-10-20T00:35:51.1334560-04:00" endTime="2025-10-20T00:35:51.1336190-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5ad8e0c5-1bfb-4dfa-bc23-6e90c4626b33" />
    <UnitTestResult executionId="f983a5c4-3f5c-434c-bdde-21793926fb20" testId="5f424197-93dc-012c-e13b-a990d068b963" testName="Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WithCancellation_PropagatesCancellation" computerName="CVDTQ2MGH4" duration="00:00:00.0006761" startTime="2025-10-20T00:35:51.1777920-04:00" endTime="2025-10-20T00:35:51.1786340-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f983a5c4-3f5c-434c-bdde-21793926fb20">
      <Output>
        <ErrorInfo>
          <Message>NSubstitute.Exceptions.AmbiguousArgumentsException : Cannot determine argument specifications to use. Please use specifications for all arguments of the same type.
Method signature:
    InvokeCoreAsync(AIFunctionArguments, CancellationToken)
Method arguments (possible arg matchers are indicated with '*'):
    InvokeCoreAsync(AIFunctionArguments, *System.Threading.CancellationToken*)
All queued specifications:
    any AIFunctionArguments
    any CancellationToken
Matched argument specifications:
    InvokeCoreAsync(AIFunctionArguments, ???)
</Message>
          <StackTrace>   at NSubstitute.Core.Arguments.ArgumentSpecificationsFactory.Create(IList`1 argumentSpecs, Object[] arguments, IParameterInfo[] parameterInfos, MethodInfo methodInfo, MatchArgs matchArgs)
   at NSubstitute.Core.CallSpecificationFactory.CreateFrom(ICall call, MatchArgs matchArgs)
   at NSubstitute.Routing.Handlers.RecordCallSpecificationHandler.Handle(ICall call)
   at NSubstitute.Routing.Route.Handle(ICall call)
   at NSubstitute.Core.CallRouter.Route(ICall call)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at Castle.Proxies.AIFunctionProxy.InvokeCoreAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
   at Microsoft.Extensions.AI.AIFunction.InvokeAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
   at Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WithCancellation_PropagatesCancellation() in /Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/SentryInstrumentedFunctionTests.cs:line 160
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7f39f284-56bd-406d-8057-8be0a3173940" testId="a2279970-f54d-36c9-18e2-0a3bf3a4e1a5" testName="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests.WithSentry_IChatClient_ReturnsWrappedClient" computerName="CVDTQ2MGH4" duration="00:00:00.0001637" startTime="2025-10-20T00:35:51.1397390-04:00" endTime="2025-10-20T00:35:51.1399700-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7f39f284-56bd-406d-8057-8be0a3173940" />
    <UnitTestResult executionId="c6bb6b83-6e31-4809-a950-8369cbf85b8a" testId="36da383e-5216-1dd1-0633-b30476b7bf75" testName="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.AllPropertyCombinations_WorkCorrectly(includeRequest: True, includeResponse: True, initializeSdk: False)" computerName="CVDTQ2MGH4" duration="00:00:00.0000053" startTime="2025-10-20T00:35:51.1974100-04:00" endTime="2025-10-20T00:35:51.1974660-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c6bb6b83-6e31-4809-a950-8369cbf85b8a" />
    <UnitTestResult executionId="e78e1a81-1940-4977-b2da-65247d7d4d57" testId="ae93880f-2ecd-ccdb-2f6a-fcbce18b93f5" testName="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithResponse_SetsResponseText_WhenAIOptionsIsNull" computerName="CVDTQ2MGH4" duration="00:00:00.0000844" startTime="2025-10-20T00:35:51.1323300-04:00" endTime="2025-10-20T00:35:51.1324760-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e78e1a81-1940-4977-b2da-65247d7d4d57" />
    <UnitTestResult executionId="2d1c54bd-f59e-4aeb-bb73-8806cc506360" testId="96bcf0ad-db0d-f78c-8841-24c10836b513" testName="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithResponse_SetsPartialTokens_WhenOnlyInputTokensProvided" computerName="CVDTQ2MGH4" duration="00:00:00.0003079" startTime="2025-10-20T00:35:51.0936190-04:00" endTime="2025-10-20T00:35:51.0941140-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2d1c54bd-f59e-4aeb-bb73-8806cc506360">
      <Output>
        <ErrorInfo>
          <Message>NSubstitute.Exceptions.ReceivedCallsException : Expected to receive exactly 1 call matching:
	SetData("gen_ai.usage.input_tokens", 10)
Actually received no matching calls.
Received 2 non-matching calls (non-matching arguments indicated with '*' characters):
	SetData("gen_ai.usage.input_tokens", *10*)
	SetData(*"gen_ai.response.text"*, *"Hello"*)
</Message>
          <StackTrace>   at NSubstitute.Core.ReceivedCallsExceptionThrower.Throw(ICallSpecification callSpecification, IEnumerable`1 matchingCalls, IEnumerable`1 nonMatchingCalls, Quantity requiredQuantity)
   at NSubstitute.Routing.Handlers.CheckReceivedCallsHandler.Handle(ICall call)
   at NSubstitute.Routing.Route.Handle(ICall call)
   at NSubstitute.Core.CallRouter.Route(ICall call)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at Castle.Proxies.ObjectProxy.SetData(String key, Object value)
   at Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithResponse_SetsPartialTokens_WhenOnlyInputTokensProvided() in /Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/SentryAISpanEnricherTests.cs:line 203
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
  <TestDefinitions>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithResponse_SetsPartialTokens_WhenOnlyInputTokensProvided" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="96bcf0ad-db0d-f78c-8841-24c10836b513">
      <Execution id="2d1c54bd-f59e-4aeb-bb73-8806cc506360" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests" name="EnrichWithResponse_SetsPartialTokens_WhenOnlyInputTokensProvided" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests.WithSentry_ChatOptions_IgnoresNonAIFunctionTools" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="4bcb2db7-80da-e3e2-fba4-ade908cbac25">
      <Execution id="44b5a1ca-b0d0-461e-a460-d1f7f7c8e428" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests" name="WithSentry_ChatOptions_IgnoresNonAIFunctionTools" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithResponse_SetsResponseText_WhenIncludeResponseContentIsTrue" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="392c3d85-43fa-afaf-2331-d63e7f21e843">
      <Execution id="640c3782-e0c4-423b-8a28-05a42f059f5b" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests" name="EnrichWithResponse_SetsResponseText_WhenIncludeResponseContentIsTrue" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests.WithSentry_IChatClient_WithNullConfiguration_UsesDefaultConfiguration" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="a03a5a24-7ffe-5f66-e81b-0b47bf83dbdf">
      <Execution id="abf3d383-080e-4cd9-875b-735e3c5293d3" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests" name="WithSentry_IChatClient_WithNullConfiguration_UsesDefaultConfiguration" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WithParentSpan_CreatesChildSpan" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="151f3e25-cc68-2d30-b0b2-e2ef6acde1bb">
      <Execution id="d4a4ff73-fde0-4d0c-940b-42ce3d6c4af7" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests" name="InvokeCoreAsync_WithParentSpan_CreatesChildSpan" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests.WithSentry_ChatOptions_WrapsAIFunctionsWithSentryInstrumentedFunction" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="ba199bb8-d424-d524-1d8d-da149d15eef3">
      <Execution id="de62d2dd-bfe0-496d-a4fe-95889d7e1566" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests" name="WithSentry_ChatOptions_WrapsAIFunctionsWithSentryInstrumentedFunction" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithRequest_SetsMessages_WhenAIOptionsIsNull" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="efe2ebc2-e6ab-4c94-197d-c09419222a7d">
      <Execution id="7e5c1b0b-3188-46ee-93ba-4f167d9cfe57" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests" name="EnrichWithRequest_SetsMessages_WhenAIOptionsIsNull" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithStreamingResponse_ConcatenatesResponseText" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="dc43dbac-c392-5964-cd42-09fb42fb03c1">
      <Execution id="5ad8e0c5-1bfb-4dfa-bc23-6e90c4626b33" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests" name="EnrichWithStreamingResponse_ConcatenatesResponseText" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests.WithSentry_ChatOptions_WithEmptyTools_ReturnsOriginalOptions" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="1c773253-8091-efb0-f12a-72613ed49ff2">
      <Execution id="629782e3-23b7-47ce-8da2-c5be7355ccf8" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests" name="WithSentry_ChatOptions_WithEmptyTools_ReturnsOriginalOptions" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WithNullResult_DoesNotSetOutput" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="ed177158-3c09-062f-0c4d-a136a6f1215b">
      <Execution id="6b393f49-e466-4fe3-8cbf-a17e204ec09b" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests" name="InvokeCoreAsync_WithNullResult_DoesNotSetOutput" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithResponse_SetsUsageTokens_WhenUsageProvided" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="1ca7e173-e19d-8580-5685-2dca9586fb0e">
      <Execution id="7cabc4ca-9da3-489b-903a-42d16d82fa2f" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests" name="EnrichWithResponse_SetsUsageTokens_WhenUsageProvided" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithRequest_SetsUnknownModel_WhenModelIdNotProvided" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="51cdcccd-3448-cee0-c36a-f3b47f12c505">
      <Execution id="abe60f8f-4171-4694-b14f-540ab5a2659d" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests" name="EnrichWithRequest_SetsUnknownModel_WhenModelIdNotProvided" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithResponse_DoesNotSetResponseText_WhenIncludeResponseContentIsFalse" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="7784a66f-9cf7-4945-cbc4-881faee565ce">
      <Execution id="8998050b-c4ba-4670-8581-04813091924c" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests" name="EnrichWithResponse_DoesNotSetResponseText_WhenIncludeResponseContentIsFalse" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests.WithSentry_IChatClient_WithConfiguration_PassesConfigurationToWrapper" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="fa8763f3-ed37-46b6-e14d-45b00912eee7">
      <Execution id="3a4c8aca-f50b-4212-984c-3adb0faedb14" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests" name="WithSentry_IChatClient_WithConfiguration_PassesConfigurationToWrapper" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithStreamingResponse_DoesNotSetResponseText_WhenIncludeResponseContentIsFalse" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="b7c7890c-80e8-1bd0-114d-1cb7ffdd8b97">
      <Execution id="dacb12be-c086-4822-a50f-80b33509e59c" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests" name="EnrichWithStreamingResponse_DoesNotSetResponseText_WhenIncludeResponseContentIsFalse" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests.WithSentry_ChatOptions_HandlesMultipleFunctions" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="b3a9e239-1ca8-3b0e-a087-4455bfe3865c">
      <Execution id="101b3e55-2ccc-48b3-8d36-b24b6445cef5" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests" name="WithSentry_ChatOptions_HandlesMultipleFunctions" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.AllPropertyCombinations_WorkCorrectly(includeRequest: False, includeResponse: False, initializeSdk: True)" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="0e7ba0d7-8640-06f9-182a-9d339e1d0c02">
      <Execution id="857d3b24-b1d4-4a39-ae16-6ece569cb4c3" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAIOptionsTests" name="AllPropertyCombinations_WorkCorrectly" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.CanSetSentryOptionsProperties" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="ed283f2b-aa73-b878-e612-9aaba5ad0b51">
      <Execution id="bc47cd12-ccce-44ec-ad99-56aef8622168" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAIOptionsTests" name="CanSetSentryOptionsProperties" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithRequest_SetsPresencePenalty_WhenProvided" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="ae327b53-2b22-2b29-b106-eec49bc98ec2">
      <Execution id="603c4c70-8386-4af5-8ad4-351176e9a785" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests" name="EnrichWithRequest_SetsPresencePenalty_WhenProvided" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithRequest_SetsModelId_WhenProvided" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="cc932cdd-3f79-8605-a6d7-40611a0ef5d1">
      <Execution id="3f26385e-deb6-4189-a98c-657d6a1c6413" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests" name="EnrichWithRequest_SetsModelId_WhenProvided" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.IncludeRequestMessages_CanBeSet" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="3aee159b-a8f5-7545-489f-7b5997acc138">
      <Execution id="0d723b09-ebd8-4d59-956c-a473a93084e3" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAIOptionsTests" name="IncludeRequestMessages_CanBeSet" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithRequest_SetsTemperature_WhenProvided" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="acd71ff6-cf60-d3df-9838-85cc88c6d9a1">
      <Execution id="83c69b2f-9e4f-4b9b-8044-f925ef1ca9ab" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests" name="EnrichWithRequest_SetsTemperature_WhenProvided" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests.WithSentry_IChatClient_ReturnsWrappedClient" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="a2279970-f54d-36c9-18e2-0a3bf3a4e1a5">
      <Execution id="7f39f284-56bd-406d-8057-8be0a3173940" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests" name="WithSentry_IChatClient_ReturnsWrappedClient" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithRequest_DoesNotSetMessages_WhenMessagesArrayIsEmpty" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="35fba436-2403-7029-b0bc-5e38c6e4b75a">
      <Execution id="1caf844b-08b2-44a1-9f46-c71d8176a15a" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests" name="EnrichWithRequest_DoesNotSetMessages_WhenMessagesArrayIsEmpty" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryChatClientTests.CompleteAsync_CallsInnerClient" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="b41f6021-383a-d928-8ca4-0fd332e9d7c2">
      <Execution id="63c54753-a740-408e-b8a0-e6ae84aeee51" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryChatClientTests" name="CompleteAsync_CallsInnerClient" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.AllPropertyCombinations_WorkCorrectly(includeRequest: True, includeResponse: False, initializeSdk: False)" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="edfb2d64-ad5a-7de7-e70b-cbff59f4c950">
      <Execution id="20e1281e-46bc-43bf-860d-a3826c142bf6" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAIOptionsTests" name="AllPropertyCombinations_WorkCorrectly" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithResponse_SetsResponseText_WhenAIOptionsIsNull" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="ae93880f-2ecd-ccdb-2f6a-fcbce18b93f5">
      <Execution id="e78e1a81-1940-4977-b2da-65247d7d4d57" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests" name="EnrichWithResponse_SetsResponseText_WhenAIOptionsIsNull" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.AllPropertyCombinations_WorkCorrectly(includeRequest: True, includeResponse: True, initializeSdk: False)" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="36da383e-5216-1dd1-0633-b30476b7bf75">
      <Execution id="c6bb6b83-6e31-4809-a950-8369cbf85b8a" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAIOptionsTests" name="AllPropertyCombinations_WorkCorrectly" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.AllPropertyCombinations_WorkCorrectly(includeRequest: False, includeResponse: True, initializeSdk: True)" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="b4f94cc6-9755-d4f6-5420-5847c696e96d">
      <Execution id="347ffe47-9359-45e8-ab7b-42f714ae304d" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAIOptionsTests" name="AllPropertyCombinations_WorkCorrectly" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithRequest_SetsTopP_WhenProvided" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="583ec369-322a-54f1-e99c-650ad5156272">
      <Execution id="49868197-7f83-4ea7-9530-7a04d873fc0a" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests" name="EnrichWithRequest_SetsTopP_WhenProvided" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithRequest_SetsFrequencyPenalty_WhenProvided" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="84d6b514-0700-14d2-e5a2-7b328a7e27fa">
      <Execution id="e32a7c0d-443a-4eaa-87b4-523f99086a81" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests" name="EnrichWithRequest_SetsFrequencyPenalty_WhenProvided" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WithComplexResult_SetsOutputAsString" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="dfbefe52-2c1c-cd7b-53c3-9129446f634c">
      <Execution id="0e9f38c6-f6a1-43af-9bfe-07a2043aabf3" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests" name="InvokeCoreAsync_WithComplexResult_SetsOutputAsString" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.AllPropertyCombinations_WorkCorrectly(includeRequest: False, includeResponse: False, initializeSdk: False)" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="9429f264-54d3-17d7-1715-b8108ebaa7b4">
      <Execution id="e795496a-60e0-45c0-8023-8af4b89cbc54" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAIOptionsTests" name="AllPropertyCombinations_WorkCorrectly" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithStreamingResponse_AccumulatesTokenUsage" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="10bcaeb6-c20b-6a8a-4027-748a1cfe151e">
      <Execution id="77cafe88-fc2e-4a11-ab77-a358ba337086" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests" name="EnrichWithStreamingResponse_AccumulatesTokenUsage" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.InitializeSdk_CanBeSet" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="627f7ca1-3ef4-a67f-49b0-30264416446f">
      <Execution id="91cb6db3-140a-4847-bcb2-408ed7042cb7" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAIOptionsTests" name="InitializeSdk_CanBeSet" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithResponse_DoesNotSetUsage_WhenUsageIsNull" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="eab920ec-3077-1f6d-10fc-458a11c1c4bd">
      <Execution id="2053f658-a3c7-46da-9977-6391f223260a" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests" name="EnrichWithResponse_DoesNotSetUsage_WhenUsageIsNull" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.IncludeResponseContent_CanBeSet" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="ec1fa19b-b6c9-d93f-8ff5-b1a2af964267">
      <Execution id="70a06ba3-58b0-450c-a6d5-3c18741db414" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAIOptionsTests" name="IncludeResponseContent_CanBeSet" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_PreservesInnerFunctionName" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="a31999a4-1161-ca6d-a806-310c959e5764">
      <Execution id="8ccc5b1e-5677-4881-bf0c-cccc0beb6a8e" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests" name="InvokeCoreAsync_PreservesInnerFunctionName" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests.WithSentry_ChatOptions_DoesNotDoubleWrapSentryInstrumentedFunction" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="a1c2944e-8323-7022-5f2b-9870cd310e41">
      <Execution id="455e4dfe-016c-4942-a1d3-fa67e5920cd0" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests" name="WithSentry_ChatOptions_DoesNotDoubleWrapSentryInstrumentedFunction" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithRequest_DoesNotSetMessages_WhenIncludeRequestMessagesIsFalse" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="ef1b8795-2d5a-a1b0-12fe-8eeebbd0707b">
      <Execution id="933ee7d4-21e8-4a92-aed8-0a592d4e4996" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests" name="EnrichWithRequest_DoesNotSetMessages_WhenIncludeRequestMessagesIsFalse" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.InheritsFromSentryOptions" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="e783a54c-e6bd-8860-1781-60f1b554ce97">
      <Execution id="4f60f82e-1cdb-4abd-8d9f-306d69469f44" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAIOptionsTests" name="InheritsFromSentryOptions" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithRequest_SetsMaxOutputTokens_WhenProvided" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="9bede207-1173-52b6-152f-687fe5328066">
      <Execution id="8e43a04d-7ae9-448d-8fbe-104214ed6d1d" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests" name="EnrichWithRequest_SetsMaxOutputTokens_WhenProvided" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryChatClientTests.CompleteStreamingAsync_CallsInnerClient" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="37aff03a-988a-2006-0d24-3ec4a9ddc16a">
      <Execution id="f293ada1-b09b-4e99-83bf-7d2e51e84e3b" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryChatClientTests" name="CompleteStreamingAsync_CallsInnerClient" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.AllPropertyCombinations_WorkCorrectly(includeRequest: False, includeResponse: True, initializeSdk: False)" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="68a8b658-405d-1d36-ca0d-84e1e49cba1c">
      <Execution id="2c98694f-b9f1-44b6-8899-fd6d39b4a6c5" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAIOptionsTests" name="AllPropertyCombinations_WorkCorrectly" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithResponse_SetsModelId_WhenProvided" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="a668f0c0-d834-673f-0855-a43a49192458">
      <Execution id="fb10b0e8-a183-41c4-87ef-4cb311c7d8c8" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests" name="EnrichWithResponse_SetsModelId_WhenProvided" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WithoutParentSpan_CreatesTransaction" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="a1411ee4-03cc-3160-23ec-62d379e3663f">
      <Execution id="e30215aa-772a-40e3-ae93-642ca1e833d3" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests" name="InvokeCoreAsync_WithoutParentSpan_CreatesTransaction" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithStreamingResponse_SetsModelId_FromLastMessageWithModelId" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="828b770f-853b-159e-4524-618d81bb2a82">
      <Execution id="49fa6162-bc1f-4443-a52a-da25b89f7101" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests" name="EnrichWithStreamingResponse_SetsModelId_FromLastMessageWithModelId" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WithCancellation_PropagatesCancellation" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="5f424197-93dc-012c-e13b-a990d068b963">
      <Execution id="f983a5c4-3f5c-434c-bdde-21793926fb20" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests" name="InvokeCoreAsync_WithCancellation_PropagatesCancellation" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WhenInnerFunctionThrows_FinishesSpanWithException" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="af851512-e09b-05cb-e521-fdd87e38b42b">
      <Execution id="00797fc9-6c8c-4801-a339-ad3c4aad2208" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests" name="InvokeCoreAsync_WhenInnerFunctionThrows_FinishesSpanWithException" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests.WithSentry_ChatOptions_WithNullTools_ReturnsOriginalOptions" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="4da8a0a3-9cbb-004a-70e3-bcf16601a020">
      <Execution id="59174dd2-0cff-4692-a9fb-edd9cc6b12aa" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAIExtensionsTests" name="WithSentry_ChatOptions_WithNullTools_ReturnsOriginalOptions" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithRequest_SetsBasicOperationName" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="9f10085a-199c-a283-23c9-bf3cb4682c44">
      <Execution id="0289ac5c-6e3c-47ee-8576-19e71d94f7e6" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests" name="EnrichWithRequest_SetsBasicOperationName" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithRequest_SetsMessages_WhenIncludeRequestMessagesIsTrue" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="5553cf67-c3a9-2355-8661-bd7b922a8095">
      <Execution id="3881419c-ce86-4660-ad5a-b9f45307bd73" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests" name="EnrichWithRequest_SetsMessages_WhenIncludeRequestMessagesIsTrue" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithRequest_SetsTools_WhenToolsProvided" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="792e8a59-9b1e-02d1-3547-d4154d2b968a">
      <Execution id="70a907c7-73b7-479b-9384-8e5d4ab1427c" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests" name="EnrichWithRequest_SetsTools_WhenToolsProvided" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.AllPropertyCombinations_WorkCorrectly(includeRequest: True, includeResponse: True, initializeSdk: True)" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="ed5d9d9d-7702-7201-3bd0-673ad663cdae">
      <Execution id="69142e53-c0dd-43af-90fc-eb99182b2aad" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAIOptionsTests" name="AllPropertyCombinations_WorkCorrectly" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.AllPropertyCombinations_WorkCorrectly(includeRequest: True, includeResponse: False, initializeSdk: True)" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="ecd7e7dd-9e98-8a95-f239-7db00bb2588d">
      <Execution id="0c8c5376-41d2-4d5b-8cc2-a8da80ad17ee" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAIOptionsTests" name="AllPropertyCombinations_WorkCorrectly" />
    </UnitTest>
    <UnitTest name="Sentry.Extensions.AI.Tests.SentryAIOptionsTests.Constructor_SetsDefaultValues" storage="/users/alexsohn/code/sentry-dotnet/test/sentry.extensions.ai.tests/bin/debug/net8.0/sentry.extensions.ai.tests.dll" id="3a84f686-1d60-f3e7-2242-3d8af5db297b">
      <Execution id="b3668c60-1913-4fb3-93ef-fec9ccc9e8ee" />
      <TestMethod codeBase="/Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/bin/Debug/net8.0/Sentry.Extensions.AI.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner3/netcore/" className="Sentry.Extensions.AI.Tests.SentryAIOptionsTests" name="Constructor_SetsDefaultValues" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="a03a5a24-7ffe-5f66-e81b-0b47bf83dbdf" executionId="abf3d383-080e-4cd9-875b-735e3c5293d3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="edfb2d64-ad5a-7de7-e70b-cbff59f4c950" executionId="20e1281e-46bc-43bf-860d-a3826c142bf6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a31999a4-1161-ca6d-a806-310c959e5764" executionId="8ccc5b1e-5677-4881-bf0c-cccc0beb6a8e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ecd7e7dd-9e98-8a95-f239-7db00bb2588d" executionId="0c8c5376-41d2-4d5b-8cc2-a8da80ad17ee" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b41f6021-383a-d928-8ca4-0fd332e9d7c2" executionId="63c54753-a740-408e-b8a0-e6ae84aeee51" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a1411ee4-03cc-3160-23ec-62d379e3663f" executionId="e30215aa-772a-40e3-ae93-642ca1e833d3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="583ec369-322a-54f1-e99c-650ad5156272" executionId="49868197-7f83-4ea7-9530-7a04d873fc0a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5553cf67-c3a9-2355-8661-bd7b922a8095" executionId="3881419c-ce86-4660-ad5a-b9f45307bd73" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9429f264-54d3-17d7-1715-b8108ebaa7b4" executionId="e795496a-60e0-45c0-8023-8af4b89cbc54" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9f10085a-199c-a283-23c9-bf3cb4682c44" executionId="0289ac5c-6e3c-47ee-8576-19e71d94f7e6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="35fba436-2403-7029-b0bc-5e38c6e4b75a" executionId="1caf844b-08b2-44a1-9f46-c71d8176a15a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="84d6b514-0700-14d2-e5a2-7b328a7e27fa" executionId="e32a7c0d-443a-4eaa-87b4-523f99086a81" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ef1b8795-2d5a-a1b0-12fe-8eeebbd0707b" executionId="933ee7d4-21e8-4a92-aed8-0a592d4e4996" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cc932cdd-3f79-8605-a6d7-40611a0ef5d1" executionId="3f26385e-deb6-4189-a98c-657d6a1c6413" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="792e8a59-9b1e-02d1-3547-d4154d2b968a" executionId="70a907c7-73b7-479b-9384-8e5d4ab1427c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ed177158-3c09-062f-0c4d-a136a6f1215b" executionId="6b393f49-e466-4fe3-8cbf-a17e204ec09b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ed5d9d9d-7702-7201-3bd0-673ad663cdae" executionId="69142e53-c0dd-43af-90fc-eb99182b2aad" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="51cdcccd-3448-cee0-c36a-f3b47f12c505" executionId="abe60f8f-4171-4694-b14f-540ab5a2659d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="efe2ebc2-e6ab-4c94-197d-c09419222a7d" executionId="7e5c1b0b-3188-46ee-93ba-4f167d9cfe57" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3a84f686-1d60-f3e7-2242-3d8af5db297b" executionId="b3668c60-1913-4fb3-93ef-fec9ccc9e8ee" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a1c2944e-8323-7022-5f2b-9870cd310e41" executionId="455e4dfe-016c-4942-a1d3-fa67e5920cd0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="eab920ec-3077-1f6d-10fc-458a11c1c4bd" executionId="2053f658-a3c7-46da-9977-6391f223260a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="627f7ca1-3ef4-a67f-49b0-30264416446f" executionId="91cb6db3-140a-4847-bcb2-408ed7042cb7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fa8763f3-ed37-46b6-e14d-45b00912eee7" executionId="3a4c8aca-f50b-4212-984c-3adb0faedb14" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ae327b53-2b22-2b29-b106-eec49bc98ec2" executionId="603c4c70-8386-4af5-8ad4-351176e9a785" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="10bcaeb6-c20b-6a8a-4027-748a1cfe151e" executionId="77cafe88-fc2e-4a11-ab77-a358ba337086" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a668f0c0-d834-673f-0855-a43a49192458" executionId="fb10b0e8-a183-41c4-87ef-4cb311c7d8c8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1c773253-8091-efb0-f12a-72613ed49ff2" executionId="629782e3-23b7-47ce-8da2-c5be7355ccf8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="acd71ff6-cf60-d3df-9838-85cc88c6d9a1" executionId="83c69b2f-9e4f-4b9b-8044-f925ef1ca9ab" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b7c7890c-80e8-1bd0-114d-1cb7ffdd8b97" executionId="dacb12be-c086-4822-a50f-80b33509e59c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ed283f2b-aa73-b878-e612-9aaba5ad0b51" executionId="bc47cd12-ccce-44ec-ad99-56aef8622168" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b4f94cc6-9755-d4f6-5420-5847c696e96d" executionId="347ffe47-9359-45e8-ab7b-42f714ae304d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="828b770f-853b-159e-4524-618d81bb2a82" executionId="49fa6162-bc1f-4443-a52a-da25b89f7101" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="37aff03a-988a-2006-0d24-3ec4a9ddc16a" executionId="f293ada1-b09b-4e99-83bf-7d2e51e84e3b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="68a8b658-405d-1d36-ca0d-84e1e49cba1c" executionId="2c98694f-b9f1-44b6-8899-fd6d39b4a6c5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ba199bb8-d424-d524-1d8d-da149d15eef3" executionId="de62d2dd-bfe0-496d-a4fe-95889d7e1566" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7784a66f-9cf7-4945-cbc4-881faee565ce" executionId="8998050b-c4ba-4670-8581-04813091924c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="392c3d85-43fa-afaf-2331-d63e7f21e843" executionId="640c3782-e0c4-423b-8a28-05a42f059f5b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e783a54c-e6bd-8860-1781-60f1b554ce97" executionId="4f60f82e-1cdb-4abd-8d9f-306d69469f44" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0e7ba0d7-8640-06f9-182a-9d339e1d0c02" executionId="857d3b24-b1d4-4a39-ae16-6ece569cb4c3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="af851512-e09b-05cb-e521-fdd87e38b42b" executionId="00797fc9-6c8c-4801-a339-ad3c4aad2208" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ec1fa19b-b6c9-d93f-8ff5-b1a2af964267" executionId="70a06ba3-58b0-450c-a6d5-3c18741db414" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3aee159b-a8f5-7545-489f-7b5997acc138" executionId="0d723b09-ebd8-4d59-956c-a473a93084e3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4bcb2db7-80da-e3e2-fba4-ade908cbac25" executionId="44b5a1ca-b0d0-461e-a460-d1f7f7c8e428" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4da8a0a3-9cbb-004a-70e3-bcf16601a020" executionId="59174dd2-0cff-4692-a9fb-edd9cc6b12aa" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b3a9e239-1ca8-3b0e-a087-4455bfe3865c" executionId="101b3e55-2ccc-48b3-8d36-b24b6445cef5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1ca7e173-e19d-8580-5685-2dca9586fb0e" executionId="7cabc4ca-9da3-489b-903a-42d16d82fa2f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9bede207-1173-52b6-152f-687fe5328066" executionId="8e43a04d-7ae9-448d-8fbe-104214ed6d1d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="151f3e25-cc68-2d30-b0b2-e2ef6acde1bb" executionId="d4a4ff73-fde0-4d0c-940b-42ce3d6c4af7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="dfbefe52-2c1c-cd7b-53c3-9129446f634c" executionId="0e9f38c6-f6a1-43af-9bfe-07a2043aabf3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="dc43dbac-c392-5964-cd42-09fb42fb03c1" executionId="5ad8e0c5-1bfb-4dfa-bc23-6e90c4626b33" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5f424197-93dc-012c-e13b-a990d068b963" executionId="f983a5c4-3f5c-434c-bdde-21793926fb20" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a2279970-f54d-36c9-18e2-0a3bf3a4e1a5" executionId="7f39f284-56bd-406d-8057-8be0a3173940" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="36da383e-5216-1dd1-0633-b30476b7bf75" executionId="c6bb6b83-6e31-4809-a950-8369cbf85b8a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ae93880f-2ecd-ccdb-2f6a-fcbce18b93f5" executionId="e78e1a81-1940-4977-b2da-65247d7d4d57" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="96bcf0ad-db0d-f78c-8841-24c10836b513" executionId="2d1c54bd-f59e-4aeb-bb73-8806cc506360" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Failed">
    <Counters total="56" executed="56" passed="47" failed="9" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v3.1.1+bf6400fd51 (64-bit .NET 8.0.19)
[xUnit.net 00:00:00.06]   Discovering: Sentry.Extensions.AI.Tests
[xUnit.net 00:00:00.08]   Discovered:  Sentry.Extensions.AI.Tests
[xUnit.net 00:00:00.09]   Starting:    Sentry.Extensions.AI.Tests
[xUnit.net 00:00:00.21]       NSubstitute.Exceptions.ReceivedCallsException : Expected to receive exactly 1 call matching:
[xUnit.net 00:00:00.21]       	SetData("gen_ai.usage.input_tokens", 10)
[xUnit.net 00:00:00.21]       Actually received no matching calls.
[xUnit.net 00:00:00.21]       Received 4 non-matching calls (non-matching arguments indicated with '*' characters):
[xUnit.net 00:00:00.21]       	SetData("gen_ai.usage.input_tokens", *10*)
[xUnit.net 00:00:00.21]       	SetData(*"gen_ai.usage.output_tokens"*, *20*)
[xUnit.net 00:00:00.21]       	SetData(*"gen_ai.usage.total_tokens"*, *30*)
[xUnit.net 00:00:00.21]       	SetData(*"gen_ai.response.text"*, *"Hello"*)
[xUnit.net 00:00:00.21]       
[xUnit.net 00:00:00.21]       Stack Trace:
[xUnit.net 00:00:00.21]            at NSubstitute.Core.ReceivedCallsExceptionThrower.Throw(ICallSpecification callSpecification, IEnumerable`1 matchingCalls, IEnumerable`1 nonMatchingCalls, Quantity requiredQuantity)
[xUnit.net 00:00:00.21]            at NSubstitute.Routing.Handlers.CheckReceivedCallsHandler.Handle(ICall call)
[xUnit.net 00:00:00.21]            at NSubstitute.Routing.Route.Handle(ICall call)
[xUnit.net 00:00:00.21]            at NSubstitute.Core.CallRouter.Route(ICall call)
[xUnit.net 00:00:00.21]            at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.21]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.21]            at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.21]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.21]            at Castle.Proxies.ObjectProxy.SetData(String key, Object value)
[xUnit.net 00:00:00.21]         /Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/SentryAISpanEnricherTests.cs(175,0): at Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithResponse_SetsUsageTokens_WhenUsageProvided()
[xUnit.net 00:00:00.21]            at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
[xUnit.net 00:00:00.21]            at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)
[xUnit.net 00:00:00.22]       NSubstitute.Exceptions.ReceivedCallsException : Expected to receive exactly 1 call matching:
[xUnit.net 00:00:00.22]       	SetData("gen_ai.usage.input_tokens", 10)
[xUnit.net 00:00:00.22]       Actually received no matching calls.
[xUnit.net 00:00:00.22]       Received 2 non-matching calls (non-matching arguments indicated with '*' characters):
[xUnit.net 00:00:00.22]       	SetData("gen_ai.usage.input_tokens", *10*)
[xUnit.net 00:00:00.22]       	SetData(*"gen_ai.response.text"*, *"Hello"*)
[xUnit.net 00:00:00.22]       
[xUnit.net 00:00:00.22]       Stack Trace:
[xUnit.net 00:00:00.22]            at NSubstitute.Core.ReceivedCallsExceptionThrower.Throw(ICallSpecification callSpecification, IEnumerable`1 matchingCalls, IEnumerable`1 nonMatchingCalls, Quantity requiredQuantity)
[xUnit.net 00:00:00.22]            at NSubstitute.Routing.Handlers.CheckReceivedCallsHandler.Handle(ICall call)
[xUnit.net 00:00:00.22]            at NSubstitute.Routing.Route.Handle(ICall call)
[xUnit.net 00:00:00.22]            at NSubstitute.Core.CallRouter.Route(ICall call)
[xUnit.net 00:00:00.22]            at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.22]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.22]            at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.22]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.22]            at Castle.Proxies.ObjectProxy.SetData(String key, Object value)
[xUnit.net 00:00:00.22]         /Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/SentryAISpanEnricherTests.cs(203,0): at Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithResponse_SetsPartialTokens_WhenOnlyInputTokensProvided()
[xUnit.net 00:00:00.22]            at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
[xUnit.net 00:00:00.22]            at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)
[xUnit.net 00:00:00.29]       NSubstitute.Exceptions.AmbiguousArgumentsException : Cannot determine argument specifications to use. Please use specifications for all arguments of the same type.
[xUnit.net 00:00:00.29]       Method signature:
[xUnit.net 00:00:00.29]           InvokeCoreAsync(AIFunctionArguments, CancellationToken)
[xUnit.net 00:00:00.29]       Method arguments (possible arg matchers are indicated with '*'):
[xUnit.net 00:00:00.29]           InvokeCoreAsync(AIFunctionArguments, *System.Threading.CancellationToken*)
[xUnit.net 00:00:00.29]       All queued specifications:
[xUnit.net 00:00:00.29]           any AIFunctionArguments
[xUnit.net 00:00:00.29]           any CancellationToken
[xUnit.net 00:00:00.29]       Matched argument specifications:
[xUnit.net 00:00:00.29]           InvokeCoreAsync(AIFunctionArguments, ???)
[xUnit.net 00:00:00.29]       
[xUnit.net 00:00:00.29]       Stack Trace:
[xUnit.net 00:00:00.29]            at NSubstitute.Core.Arguments.ArgumentSpecificationsFactory.Create(IList`1 argumentSpecs, Object[] arguments, IParameterInfo[] parameterInfos, MethodInfo methodInfo, MatchArgs matchArgs)
[xUnit.net 00:00:00.29]            at NSubstitute.Core.CallSpecificationFactory.CreateFrom(ICall call, MatchArgs matchArgs)
[xUnit.net 00:00:00.29]            at NSubstitute.Routing.Handlers.RecordCallSpecificationHandler.Handle(ICall call)
[xUnit.net 00:00:00.29]            at NSubstitute.Routing.Route.Handle(ICall call)
[xUnit.net 00:00:00.29]            at NSubstitute.Core.CallRouter.Route(ICall call)
[xUnit.net 00:00:00.29]            at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.29]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.29]            at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.29]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.29]            at Castle.Proxies.AIFunctionProxy.InvokeCoreAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
[xUnit.net 00:00:00.29]            at Microsoft.Extensions.AI.AIFunction.InvokeAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
[xUnit.net 00:00:00.29]         /Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/SentryInstrumentedFunctionTests.cs(68,0): at Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WhenInnerFunctionThrows_FinishesSpanWithException()
[xUnit.net 00:00:00.29]         --- End of stack trace from previous location ---
[xUnit.net 00:00:00.29]       NSubstitute.Exceptions.AmbiguousArgumentsException : Cannot determine argument specifications to use. Please use specifications for all arguments of the same type.
[xUnit.net 00:00:00.29]       Method signature:
[xUnit.net 00:00:00.29]           InvokeCoreAsync(AIFunctionArguments, CancellationToken)
[xUnit.net 00:00:00.29]       Method arguments (possible arg matchers are indicated with '*'):
[xUnit.net 00:00:00.29]           InvokeCoreAsync(AIFunctionArguments, *System.Threading.CancellationToken*)
[xUnit.net 00:00:00.29]       All queued specifications:
[xUnit.net 00:00:00.29]           any AIFunctionArguments
[xUnit.net 00:00:00.29]           any CancellationToken
[xUnit.net 00:00:00.29]       Matched argument specifications:
[xUnit.net 00:00:00.29]           InvokeCoreAsync(AIFunctionArguments, ???)
[xUnit.net 00:00:00.29]       
[xUnit.net 00:00:00.29]       Stack Trace:
[xUnit.net 00:00:00.29]            at NSubstitute.Core.Arguments.ArgumentSpecificationsFactory.Create(IList`1 argumentSpecs, Object[] arguments, IParameterInfo[] parameterInfos, MethodInfo methodInfo, MatchArgs matchArgs)
[xUnit.net 00:00:00.29]            at NSubstitute.Core.CallSpecificationFactory.CreateFrom(ICall call, MatchArgs matchArgs)
[xUnit.net 00:00:00.29]            at NSubstitute.Routing.Handlers.RecordCallSpecificationHandler.Handle(ICall call)
[xUnit.net 00:00:00.29]            at NSubstitute.Routing.Route.Handle(ICall call)
[xUnit.net 00:00:00.29]            at NSubstitute.Core.CallRouter.Route(ICall call)
[xUnit.net 00:00:00.29]            at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.29]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.29]            at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.29]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.29]            at Castle.Proxies.AIFunctionProxy.InvokeCoreAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
[xUnit.net 00:00:00.29]            at Microsoft.Extensions.AI.AIFunction.InvokeAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
[xUnit.net 00:00:00.29]         /Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/SentryInstrumentedFunctionTests.cs(135,0): at Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_PreservesInnerFunctionName()
[xUnit.net 00:00:00.29]         --- End of stack trace from previous location ---
[xUnit.net 00:00:00.30]       NSubstitute.Exceptions.AmbiguousArgumentsException : Cannot determine argument specifications to use. Please use specifications for all arguments of the same type.
[xUnit.net 00:00:00.30]       Method signature:
[xUnit.net 00:00:00.30]           InvokeCoreAsync(AIFunctionArguments, CancellationToken)
[xUnit.net 00:00:00.30]       Method arguments (possible arg matchers are indicated with '*'):
[xUnit.net 00:00:00.30]           InvokeCoreAsync(AIFunctionArguments, *System.Threading.CancellationToken*)
[xUnit.net 00:00:00.30]       All queued specifications:
[xUnit.net 00:00:00.30]           any AIFunctionArguments
[xUnit.net 00:00:00.30]           any CancellationToken
[xUnit.net 00:00:00.30]       Matched argument specifications:
[xUnit.net 00:00:00.30]           InvokeCoreAsync(AIFunctionArguments, ???)
[xUnit.net 00:00:00.30]       
[xUnit.net 00:00:00.30]       Stack Trace:
[xUnit.net 00:00:00.30]            at NSubstitute.Core.Arguments.ArgumentSpecificationsFactory.Create(IList`1 argumentSpecs, Object[] arguments, IParameterInfo[] parameterInfos, MethodInfo methodInfo, MatchArgs matchArgs)
[xUnit.net 00:00:00.30]            at NSubstitute.Core.CallSpecificationFactory.CreateFrom(ICall call, MatchArgs matchArgs)
[xUnit.net 00:00:00.30]            at NSubstitute.Routing.Handlers.RecordCallSpecificationHandler.Handle(ICall call)
[xUnit.net 00:00:00.30]            at NSubstitute.Routing.Route.Handle(ICall call)
[xUnit.net 00:00:00.30]            at NSubstitute.Core.CallRouter.Route(ICall call)
[xUnit.net 00:00:00.30]            at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.30]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.30]            at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.30]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.30]            at Castle.Proxies.AIFunctionProxy.InvokeCoreAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
[xUnit.net 00:00:00.30]            at Microsoft.Extensions.AI.AIFunction.InvokeAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
[xUnit.net 00:00:00.30]         /Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/SentryInstrumentedFunctionTests.cs(19,0): at Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WithParentSpan_CreatesChildSpan()
[xUnit.net 00:00:00.30]         --- End of stack trace from previous location ---
[xUnit.net 00:00:00.30]       NSubstitute.Exceptions.AmbiguousArgumentsException : Cannot determine argument specifications to use. Please use specifications for all arguments of the same type.
[xUnit.net 00:00:00.30]       Method signature:
[xUnit.net 00:00:00.30]           InvokeCoreAsync(AIFunctionArguments, CancellationToken)
[xUnit.net 00:00:00.30]       Method arguments (possible arg matchers are indicated with '*'):
[xUnit.net 00:00:00.30]           InvokeCoreAsync(AIFunctionArguments, *System.Threading.CancellationToken*)
[xUnit.net 00:00:00.30]       All queued specifications:
[xUnit.net 00:00:00.30]           any AIFunctionArguments
[xUnit.net 00:00:00.30]           any CancellationToken
[xUnit.net 00:00:00.30]       Matched argument specifications:
[xUnit.net 00:00:00.30]           InvokeCoreAsync(AIFunctionArguments, ???)
[xUnit.net 00:00:00.30]       
[xUnit.net 00:00:00.30]       Stack Trace:
[xUnit.net 00:00:00.30]            at NSubstitute.Core.Arguments.ArgumentSpecificationsFactory.Create(IList`1 argumentSpecs, Object[] arguments, IParameterInfo[] parameterInfos, MethodInfo methodInfo, MatchArgs matchArgs)
[xUnit.net 00:00:00.30]            at NSubstitute.Core.CallSpecificationFactory.CreateFrom(ICall call, MatchArgs matchArgs)
[xUnit.net 00:00:00.30]            at NSubstitute.Routing.Handlers.RecordCallSpecificationHandler.Handle(ICall call)
[xUnit.net 00:00:00.30]            at NSubstitute.Routing.Route.Handle(ICall call)
[xUnit.net 00:00:00.30]            at NSubstitute.Core.CallRouter.Route(ICall call)
[xUnit.net 00:00:00.30]            at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.30]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.30]            at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.30]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.30]            at Castle.Proxies.AIFunctionProxy.InvokeCoreAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
[xUnit.net 00:00:00.30]            at Microsoft.Extensions.AI.AIFunction.InvokeAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
[xUnit.net 00:00:00.30]         /Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/SentryInstrumentedFunctionTests.cs(45,0): at Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WithoutParentSpan_CreatesTransaction()
[xUnit.net 00:00:00.30]         --- End of stack trace from previous location ---
[xUnit.net 00:00:00.30]       NSubstitute.Exceptions.AmbiguousArgumentsException : Cannot determine argument specifications to use. Please use specifications for all arguments of the same type.
[xUnit.net 00:00:00.30]       Method signature:
[xUnit.net 00:00:00.30]           InvokeCoreAsync(AIFunctionArguments, CancellationToken)
[xUnit.net 00:00:00.30]       Method arguments (possible arg matchers are indicated with '*'):
[xUnit.net 00:00:00.30]           InvokeCoreAsync(AIFunctionArguments, *System.Threading.CancellationToken*)
[xUnit.net 00:00:00.30]       All queued specifications:
[xUnit.net 00:00:00.30]           any AIFunctionArguments
[xUnit.net 00:00:00.30]           any CancellationToken
[xUnit.net 00:00:00.30]       Matched argument specifications:
[xUnit.net 00:00:00.30]           InvokeCoreAsync(AIFunctionArguments, ???)
[xUnit.net 00:00:00.30]       
[xUnit.net 00:00:00.30]       Stack Trace:
[xUnit.net 00:00:00.30]            at NSubstitute.Core.Arguments.ArgumentSpecificationsFactory.Create(IList`1 argumentSpecs, Object[] arguments, IParameterInfo[] parameterInfos, MethodInfo methodInfo, MatchArgs matchArgs)
[xUnit.net 00:00:00.30]            at NSubstitute.Core.CallSpecificationFactory.CreateFrom(ICall call, MatchArgs matchArgs)
[xUnit.net 00:00:00.30]            at NSubstitute.Routing.Handlers.RecordCallSpecificationHandler.Handle(ICall call)
[xUnit.net 00:00:00.30]            at NSubstitute.Routing.Route.Handle(ICall call)
[xUnit.net 00:00:00.30]            at NSubstitute.Core.CallRouter.Route(ICall call)
[xUnit.net 00:00:00.30]            at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.30]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.30]            at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.30]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.30]            at Castle.Proxies.AIFunctionProxy.InvokeCoreAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
[xUnit.net 00:00:00.30]            at Microsoft.Extensions.AI.AIFunction.InvokeAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
[xUnit.net 00:00:00.30]         /Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/SentryInstrumentedFunctionTests.cs(113,0): at Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WithComplexResult_SetsOutputAsString()
[xUnit.net 00:00:00.30]         --- End of stack trace from previous location ---
[xUnit.net 00:00:00.30]       NSubstitute.Exceptions.AmbiguousArgumentsException : Cannot determine argument specifications to use. Please use specifications for all arguments of the same type.
[xUnit.net 00:00:00.30]       Method signature:
[xUnit.net 00:00:00.30]           InvokeCoreAsync(AIFunctionArguments, CancellationToken)
[xUnit.net 00:00:00.30]       Method arguments (possible arg matchers are indicated with '*'):
[xUnit.net 00:00:00.30]           InvokeCoreAsync(AIFunctionArguments, *System.Threading.CancellationToken*)
[xUnit.net 00:00:00.30]       All queued specifications:
[xUnit.net 00:00:00.30]           any AIFunctionArguments
[xUnit.net 00:00:00.30]           any CancellationToken
[xUnit.net 00:00:00.30]       Matched argument specifications:
[xUnit.net 00:00:00.30]           InvokeCoreAsync(AIFunctionArguments, ???)
[xUnit.net 00:00:00.30]       
[xUnit.net 00:00:00.30]       Stack Trace:
[xUnit.net 00:00:00.30]            at NSubstitute.Core.Arguments.ArgumentSpecificationsFactory.Create(IList`1 argumentSpecs, Object[] arguments, IParameterInfo[] parameterInfos, MethodInfo methodInfo, MatchArgs matchArgs)
[xUnit.net 00:00:00.30]            at NSubstitute.Core.CallSpecificationFactory.CreateFrom(ICall call, MatchArgs matchArgs)
[xUnit.net 00:00:00.30]            at NSubstitute.Routing.Handlers.RecordCallSpecificationHandler.Handle(ICall call)
[xUnit.net 00:00:00.30]            at NSubstitute.Routing.Route.Handle(ICall call)
[xUnit.net 00:00:00.30]            at NSubstitute.Core.CallRouter.Route(ICall call)
[xUnit.net 00:00:00.30]            at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.30]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.30]            at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.30]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.30]            at Castle.Proxies.AIFunctionProxy.InvokeCoreAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
[xUnit.net 00:00:00.30]            at Microsoft.Extensions.AI.AIFunction.InvokeAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
[xUnit.net 00:00:00.30]         /Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/SentryInstrumentedFunctionTests.cs(90,0): at Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WithNullResult_DoesNotSetOutput()
[xUnit.net 00:00:00.30]         --- End of stack trace from previous location ---
[xUnit.net 00:00:00.30]       NSubstitute.Exceptions.AmbiguousArgumentsException : Cannot determine argument specifications to use. Please use specifications for all arguments of the same type.
[xUnit.net 00:00:00.30]       Method signature:
[xUnit.net 00:00:00.30]           InvokeCoreAsync(AIFunctionArguments, CancellationToken)
[xUnit.net 00:00:00.30]       Method arguments (possible arg matchers are indicated with '*'):
[xUnit.net 00:00:00.30]           InvokeCoreAsync(AIFunctionArguments, *System.Threading.CancellationToken*)
[xUnit.net 00:00:00.30]       All queued specifications:
[xUnit.net 00:00:00.30]           any AIFunctionArguments
[xUnit.net 00:00:00.30]           any CancellationToken
[xUnit.net 00:00:00.30]       Matched argument specifications:
[xUnit.net 00:00:00.30]           InvokeCoreAsync(AIFunctionArguments, ???)
[xUnit.net 00:00:00.30]       
[xUnit.net 00:00:00.30]       Stack Trace:
[xUnit.net 00:00:00.30]            at NSubstitute.Core.Arguments.ArgumentSpecificationsFactory.Create(IList`1 argumentSpecs, Object[] arguments, IParameterInfo[] parameterInfos, MethodInfo methodInfo, MatchArgs matchArgs)
[xUnit.net 00:00:00.30]            at NSubstitute.Core.CallSpecificationFactory.CreateFrom(ICall call, MatchArgs matchArgs)
[xUnit.net 00:00:00.30]            at NSubstitute.Routing.Handlers.RecordCallSpecificationHandler.Handle(ICall call)
[xUnit.net 00:00:00.30]            at NSubstitute.Routing.Route.Handle(ICall call)
[xUnit.net 00:00:00.30]            at NSubstitute.Core.CallRouter.Route(ICall call)
[xUnit.net 00:00:00.30]            at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.30]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.30]            at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.30]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.30]            at Castle.Proxies.AIFunctionProxy.InvokeCoreAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
[xUnit.net 00:00:00.30]            at Microsoft.Extensions.AI.AIFunction.InvokeAsync(AIFunctionArguments arguments, CancellationToken cancellationToken)
[xUnit.net 00:00:00.30]         /Users/alexsohn/code/sentry-dotnet/test/Sentry.Extensions.AI.Tests/SentryInstrumentedFunctionTests.cs(160,0): at Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WithCancellation_PropagatesCancellation()
[xUnit.net 00:00:00.30]         --- End of stack trace from previous location ---
[xUnit.net 00:00:00.33]   Finished:    Sentry.Extensions.AI.Tests
</StdOut>
    </Output>
    <RunInfos>
      <RunInfo computerName="CVDTQ2MGH4" outcome="Error" timestamp="2025-10-20T00:35:51.0831730-04:00">
        <Text>[xUnit.net 00:00:00.20]     Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithResponse_SetsUsageTokens_WhenUsageProvided [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="CVDTQ2MGH4" outcome="Error" timestamp="2025-10-20T00:35:51.0944040-04:00">
        <Text>[xUnit.net 00:00:00.22]     Sentry.Extensions.AI.Tests.SentryAISpanEnricherTests.EnrichWithResponse_SetsPartialTokens_WhenOnlyInputTokensProvided [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="CVDTQ2MGH4" outcome="Error" timestamp="2025-10-20T00:35:51.1706940-04:00">
        <Text>[xUnit.net 00:00:00.29]     Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WhenInnerFunctionThrows_FinishesSpanWithException [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="CVDTQ2MGH4" outcome="Error" timestamp="2025-10-20T00:35:51.1722480-04:00">
        <Text>[xUnit.net 00:00:00.29]     Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_PreservesInnerFunctionName [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="CVDTQ2MGH4" outcome="Error" timestamp="2025-10-20T00:35:51.1735000-04:00">
        <Text>[xUnit.net 00:00:00.30]     Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WithParentSpan_CreatesChildSpan [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="CVDTQ2MGH4" outcome="Error" timestamp="2025-10-20T00:35:51.1752660-04:00">
        <Text>[xUnit.net 00:00:00.30]     Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WithoutParentSpan_CreatesTransaction [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="CVDTQ2MGH4" outcome="Error" timestamp="2025-10-20T00:35:51.1763340-04:00">
        <Text>[xUnit.net 00:00:00.30]     Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WithComplexResult_SetsOutputAsString [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="CVDTQ2MGH4" outcome="Error" timestamp="2025-10-20T00:35:51.1774850-04:00">
        <Text>[xUnit.net 00:00:00.30]     Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WithNullResult_DoesNotSetOutput [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="CVDTQ2MGH4" outcome="Error" timestamp="2025-10-20T00:35:51.1787210-04:00">
        <Text>[xUnit.net 00:00:00.30]     Sentry.Extensions.AI.Tests.SentryInstrumentedFunctionTests.InvokeCoreAsync_WithCancellation_PropagatesCancellation [FAIL]</Text>
      </RunInfo>
    </RunInfos>
  </ResultSummary>
</TestRun>