[assembly: System.CLSCompliant(true)]
namespace Sentry.Serilog
{
    public class SentrySerilogOptions : Sentry.SentryOptions
    {
        public SentrySerilogOptions() { }
        public System.IFormatProvider? FormatProvider { get; set; }
        public bool InitializeSdk { get; set; }
        public Serilog.Events.LogEventLevel MinimumBreadcrumbLevel { get; set; }
        public Serilog.Events.LogEventLevel MinimumEventLevel { get; set; }
        public Serilog.Formatting.ITextFormatter? TextFormatter { get; set; }
    }
}
namespace Serilog
{
    public static class SentrySinkExtensions
    {
        public static void ConfigureSentrySerilogOptions(
                    Sentry.Serilog.SentrySerilogOptions sentrySerilogOptions,
                    string? dsn = null,
                    Serilog.Events.LogEventLevel? minimumEventLevel = default,
                    Serilog.Events.LogEventLevel? minimumBreadcrumbLevel = default,
                    System.IFormatProvider? formatProvider = null,
                    Serilog.Formatting.ITextFormatter? textFormatter = null,
                    bool? sendDefaultPii = default,
                    bool? isEnvironmentUser = default,
                    string? serverName = null,
                    bool? attachStackTrace = default,
                    int? maxBreadcrumbs = default,
                    float? sampleRate = default,
                    string? release = null,
                    string? environment = null,
                    int? maxQueueItems = default,
                    System.TimeSpan? shutdownTimeout = default,
                    System.Net.DecompressionMethods? decompressionMethods = default,
                    System.IO.Compression.CompressionLevel? requestBodyCompressionLevel = default,
                    bool? requestBodyCompressionBuffered = default,
                    bool? debug = default,
                    Sentry.SentryLevel? diagnosticLevel = default,
                    bool? reportAssemblies = default,
                    Sentry.DeduplicateMode? deduplicateMode = default,
                    bool? initializeSdk = default,
                    System.Collections.Generic.Dictionary<string, string>? defaultTags = null) { }
        public static Serilog.LoggerConfiguration Sentry(this Serilog.Configuration.LoggerSinkConfiguration loggerConfiguration, System.Action<Sentry.Serilog.SentrySerilogOptions> configureOptions) { }
        public static Serilog.LoggerConfiguration Sentry(
                    this Serilog.Configuration.LoggerSinkConfiguration loggerConfiguration,
                    string? dsn = null,
                    Serilog.Events.LogEventLevel minimumBreadcrumbLevel = 2,
                    Serilog.Events.LogEventLevel minimumEventLevel = 4,
                    System.IFormatProvider? formatProvider = null,
                    Serilog.Formatting.ITextFormatter? textFormatter = null,
                    bool? sendDefaultPii = default,
                    bool? isEnvironmentUser = default,
                    string? serverName = null,
                    bool? attachStackTrace = default,
                    int? maxBreadcrumbs = default,
                    float? sampleRate = default,
                    string? release = null,
                    string? environment = null,
                    int? maxQueueItems = default,
                    System.TimeSpan? shutdownTimeout = default,
                    System.Net.DecompressionMethods? decompressionMethods = default,
                    System.IO.Compression.CompressionLevel? requestBodyCompressionLevel = default,
                    bool? requestBodyCompressionBuffered = default,
                    bool? debug = default,
                    Sentry.SentryLevel? diagnosticLevel = default,
                    bool? reportAssemblies = default,
                    Sentry.DeduplicateMode? deduplicateMode = default,
                    bool? initializeSdk = default,
                    System.Collections.Generic.Dictionary<string, string>? defaultTags = null) { }
    }
}