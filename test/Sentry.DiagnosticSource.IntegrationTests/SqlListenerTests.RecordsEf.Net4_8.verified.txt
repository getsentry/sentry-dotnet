[
  {
    Source: {
      Exception: {
        $type: Exception,
        Type: Exception,
        Message: my exception
      },
      Platform: csharp,
      SentryExceptions: [
        {
          Type: System.Exception,
          Value: my exception,
          Mechanism: {}
        }
      ],
      Level: error,
      TransactionName: my transaction,
      Request: {},
      Contexts: {
        trace: {
          Operation: 
        }
      },
      User: {},
      Environment: production
    }
  },
  {
    Source: {
      Name: my transaction,
      Platform: csharp,
      Operation: my operation,
      Description: ,
      Status: Ok,
      IsSampled: true,
      SampleRate: 1.0,
      Request: {},
      Contexts: {
        trace: {
          Operation: my operation,
          Description: ,
          Status: Ok,
          IsSampled: true
        }
      },
      User: {},
      Environment: production,
      Spans: [
        {
          IsFinished: true,
          Operation: db.query,
          Description:
SET NOCOUNT ON;
INSERT INTO [TestEntities] ([Property])
VALUES (@p0);
SELECT [Id]
FROM [TestEntities]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();,
          Status: Ok,
          IsSampled: true
        },
        {
          IsFinished: true,
          Operation: db.query,
          Description:
SELECT [t].[Id], [t].[Property]
FROM [TestEntities] AS [t],
          Status: Ok,
          IsSampled: true
        }
      ],
      IsFinished: true
    }
  }
]