<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net6.0;net5.0;netcoreapp3.1;netcoreapp2.1;net461</TargetFrameworks>
  </PropertyGroup>

  <!--
  Build these tests for .NET Core 3.0 only in Release configuration.
  This avoids false-negatives with solution analysis.
  See https://github.com/getsentry/sentry-dotnet/pull/1563
  -->
  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <TargetFrameworks>$(TargetFrameworks);netcoreapp3.0</TargetFrameworks>
  </PropertyGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'net6.0'">
    <ProjectReference Include="../../src/Sentry/Sentry.csproj" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="6.0.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="6.0.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite.Core" Version="6.0.0" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)' == 'net5.0'">
    <ProjectReference Include="../../src/Sentry/Sentry.csproj" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="5.0.11" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="5.0.11" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite.Core" Version="5.0.11" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)' == 'netcoreapp3.1'">
    <ProjectReference Include="../../src/Sentry/Sentry.csproj" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="3.1.20" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="3.1.20" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite.Core" Version="3.1.20" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)' == 'netcoreapp3.0'">
    <ProjectReference Include="../../src/Sentry.DiagnosticSource/Sentry.DiagnosticSource.csproj" SetTargetFramework="TargetFramework=netstandard2.1" />
    <ProjectReference Include="../../src/Sentry/Sentry.csproj" SetTargetFramework="TargetFramework=netstandard2.1" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="3.1.20" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="3.1.20" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite.Core" Version="3.1.20" />
    <!-- NET Core 3.0's built-in STJ is lower version which causes conflicts, so we have to explicitly reference it -->
    <PackageReference Include="System.Text.Json" Version="5.0.2" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)' == 'netcoreapp2.1'">
    <ProjectReference Include="../../src/Sentry.DiagnosticSource/Sentry.DiagnosticSource.csproj" SetTargetFramework="TargetFramework=netstandard2.0" />
    <ProjectReference Include="../../src/Sentry/Sentry.csproj" SetTargetFramework="TargetFramework=netstandard2.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="3.1.20" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="3.1.20" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite.Core" Version="3.1.20" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)' == 'net461'">
    <ProjectReference Include="../../src/Sentry.DiagnosticSource/Sentry.DiagnosticSource.csproj" SetTargetFramework="TargetFramework=net461" />
    <ProjectReference Include="../../src/Sentry/Sentry.csproj" SetTargetFramework="TargetFramework=net461" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="3.1.20" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="3.1.20" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite.Core" Version="3.1.20" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="../Sentry.Testing/Sentry.Testing.csproj" />
  </ItemGroup>

</Project>
