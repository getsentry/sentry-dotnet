<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net6.0</TargetFramework>
  </PropertyGroup>

  <PropertyGroup>
    <!--
    Note, these options do nothing if you are not authenticated.
    See https://docs.sentry.io/platforms/dotnet/configuration/msbuild/#authentication
    -->
    <!--
    <SentryUrl>...your Sentry URL if self-hosted, or omit this line if using sentry.io...</SentryUrl>
    -->
    <SentryOrg>sentry-sdks</SentryOrg>
    <SentryProject>sentry-dotnet</SentryProject>

    <!--
    After the above properties are configured, you can use the following features.
    Uploading symbols to Sentry will enable server-side symbolication (i.e. when the PDB is not present at runtime, or for AOT published programs).
    Uploading sources to Sentry during the build will enable Source Context in the Sentry issue details page.
    -->
    <SentryUploadSymbols>true</SentryUploadSymbols>
    <SentryUploadSources>true</SentryUploadSources>

    <!--
    You can automatically create releases via sentry-cli and control their creation via these properties
    See https://docs.sentry.io/cli/releases/#creating-releases
    -->
    <SentryCreateRelease>true</SentryCreateRelease>

    <!--
    To associate commits with releases
    See https://docs.sentry.io/cli/releases/#commit-integration
    -->
    <!--    <SentrySetCommits>true</SentrySetCommits>-->
    <!--    <SentrySetCommitOptions>&#45;&#45;local</SentrySetCommitOptions>-->
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\src\Sentry\Sentry.csproj" />
  </ItemGroup>

</Project>
