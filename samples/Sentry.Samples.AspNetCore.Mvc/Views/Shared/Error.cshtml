@using Sentry
@using Sentry.AspNetCore
@inject Microsoft.Extensions.Options.IOptions<SentryAspNetCoreOptions> SentryOptions

@model Samples.AspNetCore.Mvc.Models.ErrorViewModel
@{
    ViewData["Title"] = "Error";
}

<h1 class="text-danger">Error.</h1>
<h2 class="text-danger">An error occurred while processing your request.</h2>

@if (Model.ShowRequestId)
{
    <p>
        <strong>Request ID:</strong> <code>@Model.RequestId</code><br/>
        <strong>Sentry Event ID: <code>@SentrySdk.LastEventId</code></strong>
    </p>
}
@if (SentrySdk.LastEventId != SentryId.Empty)
{
    <script
        src="https://browser.sentry-cdn.com/6.19.4/bundle.min.js"
        integrity="sha384-l+UQ7KbPIcq6l4DoWCwMvaOJ0pdJ+oTVGD6GyROFzSriOH1F1f6dl90fOgcigkMX"
        crossorigin="anonymous"></script>
    <script>
        Sentry.init({ dsn: "@(SentryOptions.Value.Dsn)" });
        Sentry.showReportDialog({
            eventId: "@SentrySdk.LastEventId",
            subtitle2: "Event ID: @SentrySdk.LastEventId"
        });
    </script>
}
